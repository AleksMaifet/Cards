{"version":3,"sources":["components/superComponents/c1-SuperInputText/SuperInputText.module.css","components/Pages/LoadPage/Load.module.css","components/superComponents/c2-SuperButton/SuperButton.module.css","components/superComponents/c3-SuperCheckbox/SuperCheckbox.module.css","components/superComponents/c7-SuperRange/SuperRange.module.css","reportWebVitals.ts","components/Pages/ErrorPage/Error404.tsx","components/superComponents/c1-SuperInputText/SuperInputText.tsx","components/superComponents/c2-SuperButton/SuperButton.tsx","components/Pages/RecoveryPage/blockForgot.tsx","components/ApiRequests/apiForgot.ts","components/Reducers/AppReducer.ts","components/Reducers/ForgotReducer.ts","components/Pages/NewPassPage/ForgotPass.tsx","components/ApiRequests/apiLogin.ts","components/Reducers/login-reducer.ts","components/superComponents/c3-SuperCheckbox/SuperCheckbox.tsx","components/Pages/LoginPage/Login.tsx","components/Pages/LoginPage/LoginContainer.tsx","components/Pages/ProfilePage/Profile.tsx","components/Pages/RecoveryPage/Recovery.tsx","components/ApiRequests/registApi.ts","components/Reducers/RegistrationReducer.ts","components/Pages/RegistPage/Registration/Registration.tsx","components/Pages/RegistPage/RegistContainer.tsx","components/superComponents/c5-SuperSelect/SuperSelect.tsx","components/superComponents/c6-SuperRadio/SuperRadio.tsx","components/superComponents/c7-SuperRange/SuperRange.tsx","components/Pages/TestPage/Test.tsx","components/RoutesBlock/PrivetRoutes/ForgotPrivetRoute.tsx","components/RoutesBlock/PrivetRoutes/NewPasswordPrivetRoute.tsx","components/RoutesBlock/RoutesBlock.tsx","components/Header/Header.tsx","components/Pages/LoadPage/Load.tsx","App.tsx","components/store/store.ts","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Error404","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","typeInput","restProps","typeChange","finalSpanClassName","s","finalInputClassName","input","errorInput","superInput","type","e","currentTarget","value","key","SuperButton","red","finalClassName","default","BlockForgot","props","inputValue","setValue","submitValueHandler","onKeyPressHandler","onClick","initial","axios","create","baseURL","cardsForgotAPI","email","post","from","message","password","resetPasswordToken","initState","isLoad","isLoadAC","payload","isRecovery","newPass","newPasswordAC","ForgotPass","dispatch","useDispatch","useState","tokenId","useParams","submitForgotValueHandler","useCallback","a","status","alert","response","data","newPasswordTC","withCredentials","apiLogin","rememberMe","delete","initialState","isAuth","_id","name","avatar","setUserData","SuperCheckbox","onChangeChecked","children","checkbox","checked","Login","placeholder","onChangeEmail","onChangePassword","defaultChecked","changeChecked","to","PATH","RECOVERYPAGE","login","REGISTRATIONPAGE","LoginContainer","useSelector","state","setChecked","setEmail","setPassword","PROFILEPAGE","res","catch","err","console","log","finally","loginTC","Profile","Recovery","setTypeInput","success","style","cursor","instance","isRegistered","registrationTC","registerUser","Registration","changeEmail","changePassword","fetchData","RegistrationContainer","registrationState","registration","SuperSelect","options","onChangeOption","mappedOptions","map","o","i","SuperRadio","onChangeCallback","SuperRange","onChangeRange","finalRangeClassName","range","value1","Test","marginBottom","ForgotPrivetRoute","forgot","NewPasswordPrivetRoute","LOGINPAGE","NEWPASSPAGE","TESTPAGE","RoutesBlock","path","element","Header","display","justifyContent","margin","Load","nendovebKubscuponBlock","nendovebKubscupon","kacekagenProtsem","akemobvous","App","app","useEffect","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc6f33b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorInput\":\"SuperInputText_errorInput__1CjPV\",\"error\":\"SuperInputText_error__2xhsU\",\"superInput\":\"SuperInputText_superInput__3HwVZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nendovebKubscuponBlock\":\"Load_nendovebKubscuponBlock__1fF6D\",\"nendovebKubscupon\":\"Load_nendovebKubscupon__iZlhg\",\"kacekagenProtsem\":\"Load_kacekagenProtsem__5lEsZ\",\"loading\":\"Load_loading__3WMAF\",\"akemobvous\":\"Load_akemobvous__2BkVZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"SuperButton_red__OiowA\",\"default\":\"SuperButton_default__wL_k0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3gQJZ\",\"spanClassName\":\"SuperCheckbox_spanClassName__38bao\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__3pcXO\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\n\r\nexport const Error404 = () => {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n  onChangeText?: (value: string) => void\r\n  onEnter?: () => void\r\n  error?: string\r\n  spanClassName?: string\r\n  typeInput?: 'text' | 'password'\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        // type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,typeInput,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n    const typeChange = typeInput === 'password'? 'password' : 'text'\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${ error ? s.errorInput : s.superInput} ${className}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={typeChange}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React from 'react'\r\nimport SuperInputText from \"../../superComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../superComponents/c2-SuperButton/SuperButton\";\r\n\r\n\r\ntype BlockForgotType = {\r\n\tinputValue:string\r\n\tsetValue:(value:string) => void\r\n\tsubmitValueHandler:() => void\r\n\tonKeyPressHandler:() => void\r\n\ttypeInput?: 'text' | 'password'\r\n}\r\n\r\n\r\nexport const BlockForgot = ({...props}:BlockForgotType) => {\r\n\tconst {\r\n\t\tinputValue,\r\n\t\tsetValue,\r\n\t\tsubmitValueHandler,\r\n\t\tonKeyPressHandler,\r\n\t\ttypeInput,\r\n\t} = props\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>\r\n\t\t\t\t<SuperInputText typeInput={typeInput} onEnter={onKeyPressHandler}  onChange={(e) => setValue(e.currentTarget.value)} value={inputValue}/>\r\n\t\t\t\t<SuperButton onClick={submitValueHandler}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import axios from \"axios\";\r\n\r\n\r\ntype AxiosForgotPasswordType = {\r\n\tsuccess: boolean\r\n}\r\n\r\nconst initial = axios.create(\r\n\t{\r\n\t\tbaseURL:'https://neko-back.herokuapp.com/2.0',\r\n\t}\r\n)\r\n\r\nexport const cardsForgotAPI = {\r\n\tforgotPassword(email: string) {\r\n\t\treturn initial.post<AxiosForgotPasswordType>('auth/forgot', {\r\n\t\t\temail,\r\n\t\t\tfrom: 'AleksMaifet',\r\n\t\t\tmessage: `\\n<div style=\\\"background-color: #f7f7f7; border-radius: 12px; font-size: 20px; text-align: center; padding: 15px\\\">\\nTo reset your password,click this link: \\n<div><a href='http://localhost:3000/#/set-new-password/$token$'>Please Click</a></div>\\n</div>\\n`\r\n\t\t}, {})\r\n\t},\r\n\tsetNewPassword(password:string,resetPasswordToken:string|undefined) {\r\n\t\treturn initial.post('auth/set-new-password',{\r\n\t\t\tpassword,\r\n\t\t\tresetPasswordToken,\r\n\t\t},{})\r\n\t}\r\n}\r\n","export type initStateType = typeof initState\r\n\r\nexport const initState = {\r\n\tisLoad: false\r\n}\r\n\r\n\r\nexport const appReducer = (state = initState, action: AppHandlerType): initStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase \"ALL/IS-LOAD\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.payload\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport type AppHandlerType = ReturnType<typeof isLoadAC>\r\n\r\n\r\nexport const isLoadAC = (isLoad: boolean) => {\r\n\treturn {\r\n\t\ttype: 'ALL/IS-LOAD',\r\n\t\tpayload: {\r\n\t\t\tisLoad,\r\n\t\t}\r\n\t} as const\r\n}","import {cardsForgotAPI} from \"../ApiRequests/apiForgot\";\r\nimport {Dispatch} from \"redux\";\r\nimport {isLoadAC} from \"./AppReducer\";\r\n\r\nexport type initStateType = typeof initState\r\n\r\nexport const initState = {\r\n\tisRecovery: false,\r\n\tnewPass:false,\r\n}\r\n\r\n\r\nexport const forgotReducer = (state = initState, action: ForgotPasswordHandler): initStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase \"FORGOT/CHANGE-RECOVERY-STATUS\":\r\n\t\tcase \"FORGOT/CHANGE-NEW-PASSWORD\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.payload\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n\r\nexport type ForgotPasswordHandler = ReturnType<typeof forgotPasswordAC> | ReturnType<typeof newPasswordAC>\r\n\r\nexport const forgotPasswordAC = (isRecovery:boolean) => {\r\n\treturn {\r\n\t\ttype:'FORGOT/CHANGE-RECOVERY-STATUS',\r\n\t\tpayload:{\r\n\t\t\tisRecovery\r\n\t\t},\r\n\t} as const\r\n}\r\n\r\nexport const newPasswordAC = (newPass:boolean) => {\r\n\treturn {\r\n\t\ttype:'FORGOT/CHANGE-NEW-PASSWORD',\r\n\t\tpayload:{\r\n\t\t\tnewPass\r\n\t\t},\r\n\t} as const\r\n}\r\n\r\nexport const forgotPasswordTC = (email: string) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\tdispatch(isLoadAC(true))\r\n\t\ttry {\r\n\t\t\tconst {data:{success}} = await cardsForgotAPI.forgotPassword(email)\r\n\t\t\tif(success){\r\n\t\t\t\tdispatch(forgotPasswordAC(success))\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (e:any){\r\n\t\t\talert(e.response.data.error)\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tdispatch(isLoadAC(false))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const newPasswordTC = (newPass:string,tokenId:string | undefined) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\tdispatch(isLoadAC(true))\r\n\t\ttry {\r\n\t\t\tconst {status} = await cardsForgotAPI.setNewPassword(newPass,tokenId)\r\n\t\t\tif(status < 400){\r\n\t\t\t\tdispatch(newPasswordAC(true))\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (e:any){\r\n\t\t\talert(e.response.data.error)\r\n\t\t}\r\n\t\tfinally {\r\n\t\t\tdispatch(isLoadAC(false))\r\n\t\t}\r\n\t}\r\n}","import React, {useCallback, useState} from 'react'\r\nimport {BlockForgot} from \"../RecoveryPage/blockForgot\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {newPasswordTC} from \"../../Reducers/ForgotReducer\";\r\n\r\nexport type useParamsType = {\r\n\ttokenId:string | undefined\r\n}\r\n\r\nexport const ForgotPass = () => {\r\n\tconst dispatch = useDispatch()\r\n\tconst [value,setValue] = useState<string>('')\r\n\tconst {tokenId}:useParamsType = useParams()\r\n\tconst [typeInput,setTypeInput] = useState<'text' | 'password'>('password')\r\n\r\n\tconst submitForgotValueHandler = useCallback(() => {\r\n\t\tdispatch(newPasswordTC(value,tokenId))\r\n\t\tsetValue('')\r\n\t},[dispatch,value,tokenId])\r\n\r\n\tconst onKeyPressHandler = () => {\r\n\t\t\tsubmitForgotValueHandler()\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<BlockForgot typeInput={typeInput} onKeyPressHandler={onKeyPressHandler} submitValueHandler={submitForgotValueHandler} setValue={setValue} inputValue={value}/>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import axios, {AxiosResponse} from \"axios\";\r\ntype ResponseLoginType = {\r\n    avatar?: string;\r\n    created: Date\r\n    email: string\r\n    isAdmin: boolean\r\n    name: string\r\n    publicCardPacksCount: number\r\n    rememberMe: boolean\r\n    token: string\r\n    tokenDeathTime: number\r\n    updated: Date\r\n    verified: boolean\r\n    __v: number\r\n    _id: string\r\n}\r\ntype ResponseDeleteMeType = {\r\n    info: string;\r\n    error: string;\r\n}\r\nconst initial = axios.create(\r\n    {\r\n        baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n        withCredentials: true\r\n    }\r\n)\r\n\r\nexport const apiLogin = {\r\n    setLogin(email: string, password: string, rememberMe: boolean) {\r\n        return initial.post<ResponseLoginType, AxiosResponse<ResponseLoginType>>('auth/login', {      // Типизация...???\r\n            email: email,\r\n            password: password,\r\n            rememberMe: rememberMe\r\n        })\r\n\r\n\r\n    },\r\n    logout() {\r\n        return initial.delete<ResponseDeleteMeType>('auth/me')\r\n    },\r\n    me() {\r\n        return initial.post<ResponseLoginType>('auth/me')\r\n    },\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {apiLogin} from \"../ApiRequests/apiLogin\";\r\nimport {isLoadAC} from \"./AppReducer\";\r\n\r\ntype initialStateType = {\r\n\tisAuth: boolean\r\n\t_id: string | null;\r\n\temail: string | null;\r\n\tname: string | null;\r\n\tavatar?: string | null;\r\n\r\n}\r\nconst initialState = {\r\n\tisAuth: false,\r\n\t_id: null,\r\n\temail: null,\r\n\tname: null,\r\n\tavatar: null,\r\n}\r\ntype ActionsType = setUserDataType | setLogoutType\r\nexport const loginReducer = (state: initialStateType = initialState, action: ActionsType): initialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase'login-reducer/SET-USER-DATA': {\r\n\t\t\treturn {...state, ...action.data}\r\n\t\t}\r\n\t\tcase 'login-reducer/LOGOUT': {\r\n\t\t\treturn {...state, ...action.data}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const setUserData = (data: initialStateType) => {\r\n\treturn {\r\n\t\ttype: 'login-reducer/SET-USER-DATA',\r\n\t\tdata\r\n\t} as const\r\n}\r\ntype setUserDataType = ReturnType<typeof setUserData>\r\nconst setLogout = () => {\r\n\treturn {\r\n\t\ttype: 'login-reducer/LOGOUT',\r\n\t\tdata: {\r\n\t\t\tisAuth: false,\r\n\t\t\t_id: null,\r\n\t\t\temail: null,\r\n\t\t\tname: null,\r\n\t\t\tavatar: null,\r\n\t\t}\r\n\t} as const\r\n}\r\ntype setLogoutType = ReturnType<typeof setLogout>\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch) => {\r\n\tdispatch(isLoadAC(true))\r\n\tapiLogin.setLogin(email, password, rememberMe).then((res) => {\r\n\t\tconst data = {\r\n\t\t\tisAuth: true,\r\n\t\t\t_id: res.data._id,\r\n\t\t\temail: res.data.email,\r\n\t\t\tname: res.data.name,\r\n\t\t\tavatar: (res.data.avatar ? res.data.avatar : null),\r\n\t\t}\r\n\t\tdispatch(setUserData(data))\r\n\t}).catch((err) => console.log(err))\r\n\t\t.finally(() => dispatch(isLoadAC(false)))\r\n}\r\nexport const logoutTC = () => (dispatch: Dispatch) => {\r\n\tdispatch(isLoadAC(true))\r\n\tapiLogin.logout().then(() => {\r\n\t\t\tdispatch(setLogout())\r\n\t\t}\r\n\t).catch((err) => console.log(err))\r\n\t\t.finally(() => dispatch(isLoadAC(false)))\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n     onChange\r\n     && onChange(e)\r\n\r\n      onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../../RoutesBlock/RoutesBlock\";\r\nimport React from \"react\";\r\nimport SuperButton from \"../../superComponents/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../superComponents/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperInputText from \"../../superComponents/c1-SuperInputText/SuperInputText\";\r\n\r\n\r\ntype LoginPropsType = {\r\n    onChangeEmail: (e: React.FormEvent<HTMLInputElement>) => void\r\n    changeChecked: () => void\r\n    onChangePassword: (e: React.FormEvent<HTMLInputElement>) => void\r\n    login: () => void\r\n    password: string\r\n    email: string\r\n    checked: boolean\r\n}\r\nexport const Login = (props: LoginPropsType) => {\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div>it-incubator</div>\r\n                <div>Sign in</div>\r\n                <div>\r\n                    <SuperInputText placeholder={'Email'}\r\n                                    onChange={props.onChangeEmail}\r\n                                    value={props.email}/>\r\n                </div>\r\n                <div>\r\n                    <SuperInputText placeholder={'Password'}\r\n                                    onChange={props.onChangePassword}\r\n                                    value={props.password}/>\r\n\r\n                </div>\r\n                <div>Remember me\r\n                    <SuperCheckbox type={\"checkbox\"}\r\n                                   defaultChecked={props.checked}\r\n                                   onClick={props.changeChecked}/>\r\n                </div>\r\n                <div>\r\n                    <NavLink to={PATH.RECOVERYPAGE}>Forgot password</NavLink>\r\n                </div>\r\n                <div>\r\n                    <SuperButton onClick={props.login}>Login</SuperButton>\r\n                </div>\r\n                <div>\r\n                    <NavLink to={PATH.REGISTRATIONPAGE}>Sign Up</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n}","import React, {useState} from 'react'\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {PATH} from \"../../RoutesBlock/RoutesBlock\";\r\nimport {loginTC} from \"../../Reducers/login-reducer\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {Login} from \"./Login\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\n\r\nexport const LoginContainer = () => {\r\n    const isAuth = useSelector<AppStoreType,boolean>(state => state.login.isAuth)\r\n    const dispatch = useDispatch()\r\n    const [checked, setChecked] = useState(false)\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const changeChecked =() => {\r\n        setChecked(!checked)\r\n    }\r\n    const onChangeEmail =(e: React.FormEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n    }\r\n    const onChangePassword =(e: React.FormEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value)\r\n    }\r\n    const login = () => {\r\n        dispatch(loginTC(email, password, checked))\r\n    }\r\n    if (isAuth) {\r\n        return <Navigate to={PATH.PROFILEPAGE}/>\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Login\r\n              onChangeEmail={onChangeEmail}\r\n              changeChecked={changeChecked}\r\n              onChangePassword={onChangePassword}\r\n              login={login}\r\n              password={password}\r\n              email={email}\r\n              checked={checked}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {logoutTC} from \"../../Reducers/login-reducer\";\r\n\r\nexport const Profile = () => {\r\n\tconst isAuth=useSelector((state:AppStoreType)=>state.login.isAuth)\r\n\tconst dispatch=useDispatch()\r\n\tconst logout = () => {\r\n\t\tdispatch(logoutTC())\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>ProfilePage</div>\r\n\t\t\t{isAuth&&<button onClick={logout}>logout</button>}\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, {useCallback, useState} from 'react'\r\nimport {BlockForgot} from \"./blockForgot\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {forgotPasswordTC} from \"../../Reducers/ForgotReducer\";\r\n\r\nexport const Recovery = () => {\r\n\tconst dispatch = useDispatch()\r\n\tconst [value,setValue] = useState<string>('')\r\n\tconst [typeInput,setTypeInput] = useState<'text' | 'password'>('text')\r\n\r\n\tconst submitForgotValueHandler = useCallback(() => {\r\n\t\tdispatch(forgotPasswordTC(value))\r\n\t\tsetValue('')\r\n\t},[dispatch,value])\r\n\r\n\tconst onKeyPressHandler = () => {\r\n\t\t\tsubmitForgotValueHandler()\r\n\t}\r\n\r\n\tconst changeVisibility = () => {\r\n\t\ttypeInput === 'text' ? setTypeInput('password') : setTypeInput('text')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>\r\n\t\t\t\t<BlockForgot typeInput={typeInput} onKeyPressHandler={onKeyPressHandler} submitValueHandler={submitForgotValueHandler} setValue={setValue} inputValue={value}/>\r\n\t\t\t\t<span onClick={changeVisibility} style={{cursor:'pointer'}} >change type</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import axios, { AxiosResponse } from 'axios'\r\n\r\nconst instance = axios.create({\r\n    //for github pages\r\n    // baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    //for local use\r\n    baseURL: 'http://localhost:7542/2.0/',\r\n    withCredentials: true,\r\n})\r\nexport const registerUser = (email: string, password: string) => {\r\n    return instance.post(\"auth/register\", {email, password})\r\n}","import {Dispatch} from \"redux\";\r\nimport {registerUser} from \"../ApiRequests/registApi\";\r\nimport {isLoadAC} from \"./AppReducer\";\r\n\r\nexport type initRegistStateType = typeof initState\r\n\r\nexport const initState = {\r\n\tisRegistered: false,\r\n\terror: \"\"\r\n}\r\ntype ActionsType = ReturnType<typeof setRegisteredSuccessfull> | ReturnType<typeof setNotRegistered>\r\n\r\nexport const registrationReducer = (state = initState, action: ActionsType): initRegistStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase \"registration/SET-REGISTERED-SUCCESSFULL\":\r\n\t\t\treturn {...state, isRegistered: true}\r\n\t\tcase \"registration/SET-NOT-REGISTERED\":\r\n\t\t\treturn {...state, error: \"Email or password are invailid. Please, try registration again\"}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\nexport const setRegisteredSuccessfull = () => {\r\n\treturn {\r\n\t\ttype: \"registration/SET-REGISTERED-SUCCESSFULL\",\r\n\t} as const\r\n}\r\nexport const setNotRegistered = () => {\r\n\treturn {\r\n\t\ttype: \"registration/SET-NOT-REGISTERED\"\r\n\t} as const\r\n}\r\nexport const registrationTC = (email: string, password: string) => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\tdispatch(isLoadAC(true))\r\n\t\tregisterUser(email, password)\r\n\t\t\t.then(res => dispatch(setRegisteredSuccessfull()))\r\n\t\t\t.catch(err => dispatch(setNotRegistered()))\r\n\t\t\t.finally(() => dispatch(isLoadAC(true)))\r\n\t}\r\n}","import React, {ChangeEvent} from \"react\";\r\n\r\ntype RegistrationPropsType = {\r\n    changeEmail: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changePassword: (e: ChangeEvent<HTMLInputElement>) => void\r\n    fetchData: () => void\r\n    email: string\r\n    password: string\r\n    error: string\r\n}\r\nexport const Registration = ({\r\n                                 changeEmail,\r\n                                 changePassword,\r\n                                 fetchData,\r\n                                 email,\r\n                                 password,\r\n                                 error\r\n                             }: RegistrationPropsType) => {\r\n    return (\r\n        <div>RegistrationPage\r\n            <div>\r\n                <input onChange={changeEmail} value={email}/>\r\n            </div>\r\n            <div>\r\n                <input onChange={changePassword} value={password} type={\"password\"}/>\r\n            </div>\r\n            <div>\r\n                <button onClick={fetchData}>Register!</button>\r\n            </div>\r\n            <span>{error}</span>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useState} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {initRegistStateType, registrationTC} from \"../../Reducers/RegistrationReducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {Registration} from \"./Registration/Registration\";\r\n\r\nexport const RegistrationContainer = () => {\r\n\tconst registrationState = useSelector<AppStoreType, initRegistStateType>(state => state.registration)\r\n\tconst dispatch = useDispatch()\r\n\tconst [email, setEmail] = useState(\"\")\r\n\tconst [password, setPassword] = useState(\"\")\r\n\tconst changeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetEmail(e.currentTarget.value)\r\n\t}\r\n\tconst changePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetPassword(e.currentTarget.value)\r\n\t}\r\n\tconst fetchData = () => {\r\n\t\tdispatch(registrationTC(email, password))\r\n\t}\r\n\tif (registrationState.isRegistered){\r\n\t\treturn <Navigate to={\"/login\"}/>\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Registration changeEmail={changeEmail} changePassword={changePassword}\r\n\t\t\t\t\t\t  fetchData={fetchData} email={email}\r\n\t\t\t\t\t\t  password={password} error={registrationState.error}/>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] =  options ? options.map((o, i) => (\r\n      <option key={o + '-' + i} value={o}>{o}</option>\r\n    )) : [];\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n      onChange && onChange(e)\r\n      onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\n\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n      onChange&&onChange(e)\r\n      onChangeOption&& onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => (\r\n        <label key={name + '-' + i} >\r\n            <input\r\n                type={'radio'}\r\n                onChange={onChangeCallback}\r\n                checked={o === value}\r\n                value={o}\r\n                name={name}\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperRange.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n  onChangeRange?: (value: number) => void\r\n  value1?: number\r\n};\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeRange,\r\n        className,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e) // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value)\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'range'}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n                value={restProps.value1}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRange\r\n","import React from 'react'\r\nimport SuperInputText from \"../../superComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../superComponents/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../superComponents/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperSelect from \"../../superComponents/c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"../../superComponents/c6-SuperRadio/SuperRadio\";\r\nimport SuperRange from \"../../superComponents/c7-SuperRange/SuperRange\";\r\n\r\nexport const Test = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div style={{marginBottom:'20px'}}>TestPage</div>\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<SuperInputText/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<SuperButton>\r\n\t\t\t\t\t\tSend\r\n\t\t\t\t\t</SuperButton>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<SuperCheckbox/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<SuperSelect/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<SuperRadio/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<SuperRange/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {AppStoreType} from \"../../store/store\";\r\n\r\ntype PrivateRouterType = {\r\n\tchildren: JSX.Element\r\n}\r\n\r\nexport const ForgotPrivetRoute = ({children, ...rest}: PrivateRouterType) => {\r\n\tconst isRecovery = useSelector<AppStoreType, boolean>(state => state.forgot.isRecovery)\r\n\r\n\tif (isRecovery) {\r\n\t\treturn <Navigate to='/test'/>\r\n\t}\r\n\treturn children\r\n}","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {AppStoreType} from \"../../store/store\";\r\n\r\ntype PrivateRouterType = {\r\n\tchildren: JSX.Element\r\n}\r\n\r\nexport const NewPasswordPrivetRoute = ({children, ...rest}: PrivateRouterType) => {\r\n\tconst isNewPass = useSelector<AppStoreType, boolean>(state => state.forgot.newPass)\r\n\r\n\tif (isNewPass) {\r\n\t\treturn <Navigate to='/login'/>\r\n\t}\r\n\treturn children\r\n}","import React from 'react'\r\nimport {Navigate, Route, Routes} from \"react-router-dom\";\r\nimport {Error404} from \"../Pages/ErrorPage/Error404\";\r\nimport {ForgotPass} from \"../Pages/NewPassPage/ForgotPass\";\r\nimport { LoginContainer } from '../Pages/LoginPage/LoginContainer';\r\nimport {Profile} from \"../Pages/ProfilePage/Profile\";\r\nimport {Recovery} from \"../Pages/RecoveryPage/Recovery\";\r\nimport {RegistrationContainer} from \"../Pages/RegistPage/RegistContainer\";\r\nimport {Test} from \"../Pages/TestPage/Test\";\r\nimport {ForgotPrivetRoute} from \"./PrivetRoutes/ForgotPrivetRoute\";\r\nimport {NewPasswordPrivetRoute} from \"./PrivetRoutes/NewPasswordPrivetRoute\";\r\n\r\n\r\nexport const PATH = {\r\n  LOGINPAGE: '/login',\r\n  NEWPASSPAGE: '/set-new-password/:tokenId',\r\n  PROFILEPAGE: '/profile',\r\n  RECOVERYPAGE: '/recovery',\r\n  REGISTRATIONPAGE: '/regist',\r\n  TESTPAGE: '/test',\r\n}\r\n\r\nexport const RoutesBlock = () => {\r\n  return (\r\n    <div>\r\n      <Routes>\r\n        <Route path={'/'} element={<Navigate to={PATH.LOGINPAGE}/>}/>\r\n        <Route path={PATH.NEWPASSPAGE} element={\r\n          <NewPasswordPrivetRoute>\r\n            <ForgotPass/>\r\n          </NewPasswordPrivetRoute>\r\n        }/>\r\n        <Route path={PATH.LOGINPAGE} element={<LoginContainer/>}/>\r\n        <Route path={PATH.PROFILEPAGE} element={<Profile/>}/>\r\n        <Route path={PATH.RECOVERYPAGE} element={<Recovery/>}/>\r\n        <Route path={PATH.REGISTRATIONPAGE} element={<RegistrationContainer/>}/>\r\n        <Route path={PATH.RECOVERYPAGE} element={\r\n          <ForgotPrivetRoute>\r\n            <Recovery/>\r\n          </ForgotPrivetRoute>\r\n        }/>\r\n        <Route path={PATH.TESTPAGE} element={<Test/>}/>\r\n        <Route path={'*'} element={<Error404/>}/>\r\n      </Routes>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../RoutesBlock/RoutesBlock\";\r\n\r\n\r\nexport const Header = () => {\r\n\treturn (\r\n\t\t<div style={{display: 'flex', justifyContent: 'center'}}>\r\n\t\t\t<div style={{margin: '20px'}}>\r\n\t\t\t\t<NavLink to={PATH.LOGINPAGE}>login</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div style={{margin: '20px'}}>\r\n\t\t\t\t<NavLink to={PATH.PROFILEPAGE}>profile</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div style={{margin: '20px'}}>\r\n\t\t\t\t<NavLink to={PATH.RECOVERYPAGE}>revovery</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div style={{margin: '20px'}}>\r\n\t\t\t\t<NavLink to={PATH.REGISTRATIONPAGE}>registration</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div style={{margin: '20px'}}>\r\n\t\t\t\t<NavLink to={PATH.TESTPAGE}>test</NavLink>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from \"react\";\r\nimport s from \"././Load.module.css\"\r\n\r\n\r\nexport const Load = () => {\r\n\treturn (\r\n\t\t<div className={s.nendovebKubscuponBlock}>\r\n\t\t\t<div className={s.nendovebKubscupon}>\r\n\t\t\t\t<div className={s.kacekagenProtsem}>\r\n\t\t\t\t\t<div className={s.akemobvous}/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {Header} from \"./components/Header/Header\";\r\nimport {RoutesBlock} from \"./components/RoutesBlock/RoutesBlock\";\r\nimport {Load} from \"./components/Pages/LoadPage/Load\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"./components/store/store\";\r\nimport {apiLogin} from \"./components/ApiRequests/apiLogin\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setUserData} from './components/Reducers/login-reducer';\r\n\r\nexport const App = () => {\r\n\tconst isLoad = useSelector<AppStoreType, boolean>(state => state.app.isLoad)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        apiLogin.me().then((res) => {\r\n            const data = {\r\n                isAuth: true,\r\n                _id: res.data._id,\r\n                email: res.data.email,\r\n                name: res.data.name,\r\n                avatar: (res.data.avatar ? res.data.avatar : null),\r\n            }\r\n            dispatch(setUserData(data))\r\n\r\n        })\r\n    }, [dispatch])\r\n  return (\r\n    <div className=\"App\">\r\n      <Header/>\r\n      {isLoad && <Load/>}\r\n      <RoutesBlock/>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {registrationReducer} from \"../Reducers/RegistrationReducer\";\r\nimport {forgotReducer} from \"../Reducers/ForgotReducer\";\r\nimport {appReducer} from \"../Reducers/AppReducer\";\r\nimport {loginReducer} from \"../Reducers/login-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n\tapp: appReducer,\r\n\tregistration: registrationReducer,\r\n\tforgot: forgotReducer,\r\n\tlogin:loginReducer,\r\n})\r\n\r\nexport const store = createStore(reducers,applyMiddleware(thunk))\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n//@ts-ignore\r\n\r\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {App} from \"./App\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./components/store/store\";\n\nReactDOM.render(\n\t<HashRouter>\n\t\t<Provider store={store}>\n\t\t\t<React.StrictMode>\n\t\t\t\t<App/>\n\t\t\t</React.StrictMode>\n\t\t</Provider>\n\t</HashRouter>,\n\tdocument.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}