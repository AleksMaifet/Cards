{"version":3,"sources":["components/superComponents/c2-SuperButton/SuperButton.module.css","components/superComponents/c3-SuperCheckbox/SuperCheckbox.module.css","components/superComponents/c7-SuperRange/SuperRange.module.css","reportWebVitals.ts","components/Pages/ErrorPage/Error404.tsx","components/Pages/NewPassPage/NewPass.tsx","components/Pages/ProfilePage/Profile.tsx","components/Pages/RecoveryPage/Recovery.tsx","components/Pages/RegistPage/Regist.tsx","components/superComponents/c1-SuperInputText/SuperInputText.tsx","components/superComponents/c2-SuperButton/SuperButton.tsx","components/superComponents/c3-SuperCheckbox/SuperCheckbox.tsx","components/superComponents/c5-SuperSelect/SuperSelect.tsx","components/superComponents/c6-SuperRadio/SuperRadio.tsx","components/superComponents/c7-SuperRange/SuperRange.tsx","components/Pages/TestPage/Test.tsx","components/Pages/LoginPage/Login.tsx","components/RoutesBlock/RoutesBlock.tsx","components/Header/Header.tsx","App.tsx","components/Reducers/AppReducer.ts","components/store/store.ts","index.tsx","components/superComponents/c1-SuperInputText/SuperInputText.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Error404","NewPass","Profile","Recovery","Registration","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","input","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","SuperSelect","options","onChangeOption","mappedOptions","map","o","i","SuperRadio","name","onChangeCallback","SuperRange","onChangeRange","finalRangeClassName","range","value1","Test","style","marginBottom","Login","PATH","RoutesBlock","path","element","to","Header","display","justifyContent","margin","App","initState","reducers","combineReducers","app","state","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a55b0ce6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"SuperButton_red__OiowA\",\"default\":\"SuperButton_default__wL_k0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3gQJZ\",\"spanClassName\":\"SuperCheckbox_spanClassName__38bao\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__3pcXO\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\n\r\nexport const Error404 = () => {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NewPass = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>NewPassPage</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\n\r\nexport const Profile = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>ProfilePage</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\n\r\nexport const Recovery = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>RecoveryPage</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\n\r\nexport const Registration = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>RegistrationPage</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${ error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n     onChange\r\n     && onChange(e)\r\n\r\n      onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] =  options ? options.map((o, i) => (\r\n      <option key={o + '-' + i} value={o}>{o}</option>\r\n    )) : [];\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n      onChange && onChange(e)\r\n      onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\n\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n      onChange&&onChange(e)\r\n      onChangeOption&& onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => (\r\n        <label key={name + '-' + i} >\r\n            <input\r\n                type={'radio'}\r\n                onChange={onChangeCallback}\r\n                checked={o === value}\r\n                value={o}\r\n                name={name}\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperRange.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n  onChangeRange?: (value: number) => void\r\n  value1?: number\r\n};\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeRange,\r\n        className,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e) // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value)\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'range'}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n                value={restProps.value1}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRange\r\n","import React from 'react'\r\nimport SuperInputText from \"../../superComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../superComponents/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../superComponents/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperSelect from \"../../superComponents/c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"../../superComponents/c6-SuperRadio/SuperRadio\";\r\nimport SuperRange from \"../../superComponents/c7-SuperRange/SuperRange\";\r\n\r\nexport const Test = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div style={{marginBottom:'20px'}}>TestPage</div>\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<SuperInputText/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<SuperButton>\r\n\t\t\t\t\t\tSend\r\n\t\t\t\t\t</SuperButton>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<SuperCheckbox/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<SuperSelect/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<SuperRadio/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<SuperRange/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\n\r\nexport const Login = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>LoginPage</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport {Navigate, Route, Routes} from \"react-router-dom\";\r\nimport {Error404} from \"../Pages/ErrorPage/Error404\";\r\nimport {NewPass} from \"../Pages/NewPassPage/NewPass\";\r\nimport {Profile} from \"../Pages/ProfilePage/Profile\";\r\nimport {Recovery} from \"../Pages/RecoveryPage/Recovery\";\r\nimport {Registration} from \"../Pages/RegistPage/Regist\";\r\nimport {Test} from \"../Pages/TestPage/Test\";\r\nimport {Login} from \"../Pages/LoginPage/Login\";\r\n\r\nexport const PATH = {\r\n  LOGINPAGE: '/login',\r\n  NEWPASSPAGE: '/new_pass',\r\n  PROFILEPAGE: '/profile',\r\n  RECOVERYPAGE: '/recovery',\r\n  REGISTRATIONPAGE: '/regist',\r\n  TESTPAGE: '/test',\r\n}\r\n\r\nexport const RoutesBlock = () => {\r\n  return (\r\n    <div>\r\n      <Routes>\r\n        <Route path={'/'} element={<Navigate to={PATH.LOGINPAGE}/>}/>\r\n        <Route path={PATH.LOGINPAGE} element={<Login/>}/>\r\n        <Route path={PATH.NEWPASSPAGE} element={<NewPass/>}/>\r\n        <Route path={PATH.PROFILEPAGE} element={<Profile/>}/>\r\n        <Route path={PATH.RECOVERYPAGE} element={<Recovery/>}/>\r\n        <Route path={PATH.REGISTRATIONPAGE} element={<Registration/>}/>\r\n        <Route path={PATH.TESTPAGE} element={<Test/>}/>\r\n        <Route path={'*'} element={<Error404/>}/>\r\n      </Routes>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../RoutesBlock/RoutesBlock\";\r\n\r\nexport const Header = () => {\r\n\treturn (\r\n\t\t<div style={{display:'flex',justifyContent:'center'}}>\r\n\t\t\t<div style={{margin:'20px'}}>\r\n\t\t\t\t<NavLink to={PATH.LOGINPAGE}>login</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div style={{margin:'20px'}}>\r\n\t\t\t\t<NavLink to={PATH.NEWPASSPAGE}>newPass</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div style={{margin:'20px'}}>\r\n\t\t\t\t<NavLink to={PATH.PROFILEPAGE}>profile</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div style={{margin:'20px'}}>\r\n\t\t\t\t<NavLink to={PATH.RECOVERYPAGE}>revovery</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div style={{margin:'20px'}}>\r\n\t\t\t\t<NavLink to={PATH.REGISTRATIONPAGE}>registration</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div style={{margin:'20px'}}>\r\n\t\t\t\t<NavLink to={PATH.TESTPAGE}>test</NavLink>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport {Header} from \"./components/Header/Header\";\nimport {RoutesBlock} from \"./components/RoutesBlock/RoutesBlock\";\n\nexport const App = () => {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <RoutesBlock/>\n    </div>\n  );\n}\n\n","export type initStateType = typeof initState\r\n\r\nexport const initState = {}\r\n\r\n\r\nexport const appReducer = (state = initState , action: any): initStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase '':\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {appReducer} from \"../Reducers/AppReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst reducers = combineReducers({\r\n\tapp: appReducer,\r\n})\r\n\r\nexport const store = createStore(reducers,applyMiddleware(thunk))\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n//@ts-ignore\r\n\r\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {App} from \"./App\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./components/store/store\";\n\nReactDOM.render(\n\t<HashRouter>\n\t\t<Provider store={store}>\n\t\t\t<React.StrictMode>\n\t\t\t\t<App/>\n\t\t\t</React.StrictMode>\n\t\t</Provider>\n\t</HashRouter>,\n\tdocument.getElementById('root')\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorInput\":\"SuperInputText_errorInput__1CjPV\",\"error\":\"SuperInputText_error__2xhsU\",\"superInput\":\"SuperInputText_superInput__3HwVZ\"};"],"sourceRoot":""}