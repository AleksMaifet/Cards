{"version":3,"sources":["styleComponents/App.module.css","components/Pages/NewPassPage/ForgotPass.module.css","components/Pages/LoginPage/Login.module.css","components/Pages/RecoveryPage/Recovery.module.css","components/Pages/CheckMailPage/CheckMail.module.css","components/superComponents/c1-SuperInputText/SuperInputText.module.css","components/Pages/RegistPage/Registration.module.css","components/Pages/LoadPage/Load.module.css","components/superComponents/c2-SuperButton/SuperButton.module.css","components/superComponents/c3-SuperCheckbox/SuperCheckbox.module.css","reportWebVitals.ts","components/Pages/ErrorPage/Error404.tsx","components/ApiRequests/apiForgot.ts","components/Reducers/AppReducer.ts","components/Reducers/ForgotReducer.ts","components/superComponents/c1-SuperInputText/SuperInputText.tsx","components/superComponents/c2-SuperButton/SuperButton.tsx","images/Shape.svg","components/Pages/NewPassPage/BlockForgot.tsx","components/Pages/NewPassPage/ForgotPass.tsx","components/ApiRequests/apiLogin.ts","components/Reducers/login-reducer.ts","components/superComponents/c3-SuperCheckbox/SuperCheckbox.tsx","components/Pages/LoginPage/Login.tsx","components/Pages/LoginPage/LoginContainer.tsx","components/Pages/ProfilePage/Profile.tsx","components/Pages/RecoveryPage/BlockRecovery.tsx","components/Pages/RecoveryPage/Recovery.tsx","components/ApiRequests/registApi.ts","components/Reducers/RegistrationReducer.ts","components/Pages/RegistPage/Registration/Registration.tsx","components/Pages/RegistPage/RegistContainer.tsx","components/RoutesBlock/PrivetRoutes/ForgotPrivetRoute.tsx","components/RoutesBlock/PrivetRoutes/NewPasswordPrivetRoute.tsx","images/Group 281.svg","components/Pages/CheckMailPage/CheckMail.tsx","components/RoutesBlock/PrivetRoutes/CheckMailPrivetRoute.tsx","components/RoutesBlock/RoutesBlock.tsx","components/Header/Header.tsx","components/Pages/LoadPage/Load.tsx","App.tsx","components/store/store.ts","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Error404","initial","axios","create","baseURL","cardsForgotAPI","email","post","from","message","password","resetPasswordToken","initState","isLoad","isLoadAC","type","payload","isRecovery","newPass","emailRecovery","emailRecoveryAC","newPasswordAC","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","typeInput","restProps","typeChange","finalSpanClassName","s","finalInputClassName","input","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","default","BlockForgot","props","inputValue","setValue","submitValueHandler","changeVisibility","c","container","forgotBlock","blockCenter","forgotTitle","onSubmit","forgotInputBlock","placeholder","onClick","forgotImageBlock","src","eye","forgotText","ForgotPass","dispatch","useDispatch","useState","tokenId","useParams","setTypeInput","submitForgotValueHandler","useCallback","preventDefault","a","errorMassage","response","data","messages","alert","newPasswordTC","withCredentials","apiLogin","rememberMe","delete","initialState","isAuth","_id","name","avatar","setUserData","SuperCheckbox","onChangeChecked","children","checkbox","checked","Login","loginBlock","loginTitle","onChangeEmail","loginInputsBlock","onChangePassword","blockCheck","defaultChecked","changeChecked","blockForgotPass","to","PATH","RECOVERYPAGE","login","loginText","REGISTRATIONPAGE","LoginContainer","useSelector","state","setChecked","setEmail","setPassword","PROFILEPAGE","res","catch","err","console","log","finally","loginTC","Profile","BlockRecovery","recoveryBlock","recoveryTitle","recoveryUpperText","recoveryLowerText","LOGINPAGE","Recovery","success","instance","isRegistered","setNotRegistered","registrationTC","registerUser","Registration","changeEmail","changePassword","fetchData","changeConfirmedPassword","confirmedPassword","registrationBlock","registrationTitle","RegistrationContainer","registrationState","registration","setConfirmedPassword","ForgotPrivetRoute","forgot","NewPasswordPrivetRoute","CheckMail","checkMailBlock","checkMailImageBlock","checkMailImage","checkMailTextBlock","checkMailTitle","checkMailText","CheckMailPrivetRoute","NEWPASSPAGE","CHECKMAIL","RoutesBlock","path","element","Header","style","display","justifyContent","margin","Load","app","nendovebKubscuponBlock","nendovebKubscupon","kacekagenProtsem","App","useEffect","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kFACAA,EAAOC,QAAU,CAAC,UAAY,yB,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,gCAAgC,YAAc,gCAAgC,YAAc,gCAAgC,WAAa,+BAA+B,iBAAmB,qCAAqC,iBAAmB,uC,mBCAnRD,EAAOC,QAAU,CAAC,WAAa,0BAA0B,WAAa,0BAA0B,YAAc,2BAA2B,UAAY,yBAAyB,gBAAkB,+BAA+B,gBAAkB,+BAA+B,WAAa,0BAA0B,gBAAkB,+BAA+B,iBAAmB,kC,mBCA3XD,EAAOC,QAAU,CAAC,cAAgB,gCAAgC,cAAgB,gCAAgC,kBAAoB,oCAAoC,YAAc,8BAA8B,kBAAoB,sC,mBCA1OD,EAAOC,QAAU,CAAC,eAAiB,kCAAkC,oBAAsB,uCAAuC,mBAAqB,sCAAsC,eAAiB,kCAAkC,cAAgB,mC,mBCAhQD,EAAOC,QAAU,CAAC,WAAa,qC,mBCA/BD,EAAOC,QAAU,CAAC,kBAAoB,wCAAwC,kBAAoB,wCAAwC,YAAc,kCAAkC,iBAAmB,uCAAuC,uBAAyB,6CAA6C,uBAAyB,+C,mBCAnVD,EAAOC,QAAU,CAAC,uBAAyB,qCAAqC,kBAAoB,gCAAgC,iBAAmB,+BAA+B,QAAU,wB,mBCAhMD,EAAOC,QAAU,CAAC,QAAU,+B,mBCA5BD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,uC,sHCa9DC,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,6BCPDQ,EAAW,WACpB,OACI,gCACI,sCACA,kDACA,uF,+DCANC,EAAUC,IAAMC,OACrB,CACCC,QAAQ,wCAIGC,EAAiB,SACdC,GACd,OAAOL,EAAQM,KAA8B,cAAe,CAC3DD,QACAE,KAAM,cACNC,QAAQ,kRACN,KANQJ,EAAiB,SAQdK,EAAgBC,GAC9B,OAAOV,EAAQM,KAAK,wBAAwB,CAC3CG,WACAC,sBACC,KCnBEC,EAA0B,CAC/BC,OAAQ,QAmBIC,EAAW,SAACD,GACxB,MAAO,CACNE,KAAM,cACNC,QAAS,CACRH,YCxBUD,EAAY,CACxBK,YAAY,EACZC,SAAQ,EACRC,cAAc,IAkCFC,EAAkB,SAACd,GAC/B,MAAO,CACNS,KAAK,wBACLC,QAAQ,CACPV,WAKUe,EAAgB,SAACH,GAC7B,MAAO,CACNH,KAAK,6BACLC,QAAQ,CACPE,a,yBCHYI,EAxC2C,SAAC,GASrD,IAPEC,EAOH,EAPGA,SAAUC,EAOb,EAPaA,aACVC,EAMH,EANGA,WAAYC,EAMf,EANeA,QACZC,EAKH,EALGA,MACAC,EAIH,EAJGA,UAAWC,EAId,EAJcA,cAAcC,EAI5B,EAJ4BA,UAEtBC,EAEN,kHAaKC,EAA2B,aAAdF,EAA0B,WAAa,OACpDG,EAAkB,UAAMC,IAAEP,MAAR,YAAiBE,GAAgC,IACnEM,EAAmB,UAAMD,IAAEE,MAAR,YAAkBT,EAAQO,IAAEG,WAAaH,IAAEI,WAA3C,YAAyDV,GAElF,OACI,qCACI,mCACIb,KAAMiB,EACNT,SApBa,SAACgB,GACtBhB,GACGA,EAASgB,GAEZf,GAAgBA,EAAae,EAAEC,cAAcC,QAiBrChB,WAfe,SAACc,GACxBd,GAAcA,EAAWc,GACzBb,GACa,UAAVa,EAAEG,KACFhB,KAYKE,UAAWO,GACPJ,IAEPJ,GAAS,sBAAMC,UAAWK,EAAjB,SAAsCN,Q,iBCtB7CgB,EAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAKhB,EAGR,EAHQA,UACFG,EAEN,mCACKc,EAAc,UAAMD,EAAMV,IAAEU,IAAMV,IAAEY,QAAtB,YAAiClB,GAErD,OACI,oCACIA,UAAWiB,GACPd,K,kCCrBD,MAA0B,kCCiB5BgB,EAAc,SAAC,GAAiC,IAA7BC,EAA4B,oBAE1DC,EAKGD,EALHC,WACAC,EAIGF,EAJHE,SACAC,EAGGH,EAHHG,mBACArB,EAEGkB,EAFHlB,UACAsB,EACGJ,EADHI,iBAGD,OACC,qBAAKxB,UAAWyB,IAAEC,UAAlB,SACC,sBAAK1B,UAAWM,IAAEqB,YAAlB,UACC,qBAAK3B,UAAWM,IAAEsB,YAAlB,SACC,oBAAI5B,UAAWM,IAAEuB,YAAjB,mCAID,8BACC,uBAAMC,SAAUP,EAAhB,UACC,sBAAKvB,UAAWM,IAAEyB,iBAAlB,UACC,cAAC,EAAD,CAAgBC,YAAa,WAAY9B,UAAWA,EAC5CP,SAAU,SAACgB,GAAD,OAAOW,EAASX,EAAEC,cAAcC,QAC1CA,MAAOQ,IACf,qBAAKY,QAAST,EAAkBxB,UAAWM,IAAE4B,iBAA7C,SACC,qBAAKC,IAAKC,SAGZ,qBAAKpC,UAAWM,IAAEsB,cAElB,qBAAK5B,UAAWM,IAAEsB,YAAlB,SACC,mBAAG5B,UAAWM,IAAE+B,WAAhB,sFAID,cAAC,EAAD,2CCxCOC,EAAa,WACzB,IAAMC,EAAWC,cADc,EAENC,mBAAiB,IAFX,mBAExB5B,EAFwB,KAElBS,EAFkB,KAGxBoB,EAAyBC,cAAzBD,QAHwB,EAIED,mBAAwB,YAJ1B,mBAIxBvC,EAJwB,KAId0C,EAJc,KAMzBC,EAA2BC,uBAAY,SAACnC,GAC7CA,EAAEoC,iBACFR,EL0D2B,SAACjD,EAAiBoD,GAC9C,8CAAO,WAAOH,GAAP,eAAAS,EAAA,6DACNT,EAASrD,EAAS,YADZ,kBAGCT,EAA8Ba,EAASoD,GAHxC,OAILH,EAAS9C,GAAc,IAJlB,gDAMCwD,EAAe,KAAIC,SAAW,KAAIA,SAASC,KAAKpD,MAAQ,KAAIqD,SAAW,8BAC7EC,MAAMJ,GAPD,yBASLV,EAASrD,EAAS,YATb,4EAAP,sDK3DUoE,CAAczC,EAAM6B,IAC7BpB,EAAS,MACR,CAACiB,EAAS1B,EAAM6B,IAMlB,OACC,8BACC,cAAC,EAAD,CAAalB,iBANU,WACDoB,EAAT,SAAd1C,EAAoC,WAA2B,SAKbA,UAAWA,EAAWqB,mBAAoBsB,EAA0BvB,SAAUA,EAAUD,WAAYR,OCTlJxC,EAAUC,IAAMC,OAClB,CACIC,QAAS,sCACT+E,iBAAiB,IAIZC,EAAW,SACX9E,EAAeI,EAAkB2E,GACtC,OAAOpF,EAAQM,KAA0D,aAAc,CACnFD,MAAOA,EACPI,SAAUA,EACV2E,WAAYA,KALXD,EAAW,WAWhB,OAAOnF,EAAQqF,OAA6B,YAXvCF,EAAW,WAchB,OAAOnF,EAAQM,KAAwB,YC7BzCgF,EAAe,CACpBC,QAAQ,EACRC,IAAK,KACLnF,MAAO,KACPoF,KAAM,KACNC,OAAQ,MAgBIC,EAAc,SAACb,GAC3B,MAAO,CACNhE,KAAM,8BACNgE,S,iBCQac,EAjCyC,SAAC,GASpD,EAPG9E,KAOF,IANEQ,EAMH,EANGA,SAAUuE,EAMb,EANaA,gBACVlE,EAKH,EALGA,UACAmE,GAIH,EALclE,cAKd,EAJGkE,UAEGhE,EAEN,4FAQKI,EAAmB,UAAMD,IAAE8D,SAAR,YAAoBpE,GAAwB,IAErE,OACI,kCACI,mCACIb,KAAM,WACNQ,SAba,SAACgB,GACzBhB,GACGA,EAASgB,GAEXuD,GAAmBA,EAAgBvD,EAAEC,cAAcyD,UAUzCrE,UAAWO,GAEPJ,IAEPgE,GAAY,sBAAMnE,UAAWM,IAAEL,cAAnB,SAAmCkE,Q,iBCpB/CG,EAAQ,SAAClD,GAErB,OACC,qBAAKpB,UAAWyB,IAAEC,UAAlB,SACC,sBAAK1B,UAAWM,IAAEiE,WAAlB,UACC,qBAAKvE,UAAWM,IAAEsB,YAAlB,SACC,oBAAI5B,UAAWM,IAAEkE,WAAjB,uBAID,8BACC,cAAC,EAAD,CAAgBxC,YAAa,QACrBrC,SAAUyB,EAAMqD,cAChB5D,MAAOO,EAAM1C,UAEtB,qBAAKsB,UAAWM,IAAEoE,iBAAlB,SACC,cAAC,EAAD,CAAgB1C,YAAa,WACrBrC,SAAUyB,EAAMuD,iBAChB9D,MAAOO,EAAMtC,aAGtB,sBAAKkB,UAAWM,IAAEsE,WAAlB,wBAEC,cAAC,EAAD,CAAezF,KAAM,WACb0F,eAAgBzD,EAAMiD,QACtBpC,QAASb,EAAM0D,mBAExB,qBAAK9E,UAAWM,IAAEyE,gBAAlB,SACC,cAAC,IAAD,CAASC,GAAIC,GAAKC,aAAlB,+BAED,cAAC,EAAD,CAAajD,QAASb,EAAM+D,MAA5B,mBACA,qBAAKnF,UAAWM,IAAEsB,YAAlB,SACC,mBAAG5B,UAAWM,IAAE8E,UAAhB,2CAID,8BACC,cAAC,IAAD,CAASJ,GAAIC,GAAKI,iBAAlB,6BC/CQC,GAAiB,WAC1B,IAAM1B,EAAS2B,aAAkC,SAAAC,GAAK,OAAIA,EAAML,MAAMvB,UAChErB,EAAWC,cAFe,EAGFC,oBAAS,GAHP,mBAGzB4B,EAHyB,KAGhBoB,EAHgB,OAINhD,mBAAS,IAJH,mBAIzB/D,EAJyB,KAIlBgH,EAJkB,OAKAjD,mBAAS,IALT,mBAKzB3D,EALyB,KAKf6G,EALe,KAmBhC,OAAI/B,EACO,cAAC,IAAD,CAAUoB,GAAIC,GAAKW,cAI1B,8BACI,cAAC,EAAD,CACEnB,cAhBW,SAAC9D,GAClB+E,EAAS/E,EAAEC,cAAcC,QAgBnBiE,cApBW,WACjBW,GAAYpB,IAoBNM,iBAfc,SAAChE,GACrBgF,EAAYhF,EAAEC,cAAcC,QAetBsE,MAbI,WACV5C,EH2Be,SAAC7D,EAAeI,EAAkB2E,GAAlC,OAA0D,SAAClB,GACjFA,EAASrD,EAAS,YAClBsE,EAAkB9E,EAAOI,EAAU2E,GAAY3F,MAAK,SAAC+H,GACpD,IAAM1C,EAAO,CACZS,QAAQ,EACRC,IAAKgC,EAAI1C,KAAKU,IACdnF,MAAOmH,EAAI1C,KAAKzE,MAChBoF,KAAM+B,EAAI1C,KAAKW,KACfC,OAAS8B,EAAI1C,KAAKY,OAAS8B,EAAI1C,KAAKY,OAAS,MAE9CxB,EAASyB,EAAYb,OACnB2C,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAC5BG,SAAQ,kBAAM3D,EAASrD,EAAS,gBGvClBiH,CAAQzH,EAAOI,EAAUuF,KAa5BvF,SAAUA,EACVJ,MAAOA,EACP2F,QAASA,OCpCV+B,GAAU,WACtB,IAAMxC,EAAO2B,aAAY,SAACC,GAAD,OAAsBA,EAAML,MAAMvB,UACrDrB,EAASC,cAIf,OACC,gCACC,8CACCoB,GAAQ,wBAAQ3B,QANJ,WACdM,GJ0D4B,SAACA,GAC9BA,EAASrD,EAAS,YAClBsE,IAAkB1F,MAAK,WACrByE,EA7BK,CACNpD,KAAM,uBACNgE,KAAM,CACLS,QAAQ,EACRC,IAAK,KACLnF,MAAO,KACPoF,KAAM,KACNC,OAAQ,WAwBR+B,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAC3BG,SAAQ,kBAAM3D,EAASrD,EAAS,mBI3DvB,wB,oBCGCmH,GAAgB,SAAC,GAAiC,IAA7BjF,EAA4B,oBAE5DC,EAIGD,EAJHC,WACAC,EAGGF,EAHHE,SACAC,EAEGH,EAFHG,mBACArB,EACGkB,EADHlB,UAGD,OACC,qBAAKF,UAAWyB,IAAEC,UAAlB,SACC,sBAAK1B,UAAWM,KAAEgG,cAAlB,UACC,qBAAKtG,UAAWM,KAAEsB,YAAlB,SACC,oBAAI5B,UAAWM,KAAEiG,cAAjB,qCAID,uBAAMzE,SAAUP,EAAhB,UACC,cAAC,EAAD,CAAgBS,YAAa,QAAS9B,UAAWA,EACzCP,SAAU,SAACgB,GAAD,OAAOW,EAASX,EAAEC,cAAcC,QAC1CA,MAAOQ,IACf,qBAAKrB,UAAWM,KAAEsB,YAAlB,SACC,mBAAG5B,UAAWM,KAAEkG,kBAAhB,kFAID,cAAC,EAAD,mCAED,qBAAKxG,UAAWM,KAAEsB,YAAlB,SACC,mBAAG5B,UAAWM,KAAEmG,kBAAhB,+CAID,8BACC,cAAC,IAAD,CAASzB,GAAIC,GAAKyB,UAAlB,oCC7CQC,GAAW,WACvB,IAAMpE,EAAWC,cADY,EAEJC,mBAAiB,IAFb,mBAEtB5B,EAFsB,KAEhBS,EAFgB,OAGImB,mBAA8B,QAHlC,mBAGtBvC,EAHsB,KAKvB2C,GALuB,KAKIC,uBAAY,SAACnC,GbmDf,IAACjC,EalD/B6D,GbkD+B7D,EalDLmC,EbmD3B,uCAAO,WAAO0B,GAAP,mBAAAS,EAAA,6DACNT,EAASrD,EAAS,YADZ,kBAG2BT,EAA8BC,GAHzD,gBAGSkI,EAHT,EAGEzD,KAAOyD,QACdrE,EA/BK,CACNpD,KAAK,gCACLC,QAAQ,CACPC,WA4B0BuH,KAC1BrE,EAAS/C,EAAgBd,IALpB,kDAOCuE,EAAe,KAAIC,SAAW,KAAIA,SAASC,KAAKpD,MAAQ,6BAC9DsD,MAAMJ,GARD,yBAULV,EAASrD,EAAS,YAVb,6EAAP,wDalDCyB,EAAEoC,iBACFzB,EAAS,MACR,CAACiB,EAAS1B,KAEZ,OACC,8BACC,8BACC,cAAC,GAAD,CAAeX,UAAWA,EAAWqB,mBAAoBsB,EAA0BvB,SAAUA,EAAUD,WAAYR,SCjBjHgG,GAAWvI,IAAMC,OAAO,CAC1BC,QAAS,sCACT+E,iBAAiB,ICERvE,GAAY,CACrB8H,cAAc,EACd/G,MAAO,IAmBEgH,GAAmB,SAAChH,GAC7B,MAAO,CACHZ,KAAM,kCACNY,UAGKiH,GAAiB,SAACtI,EAAeI,GAC1C,OAAO,SAACyD,GACJA,EAASrD,EAAS,YD7BE,SAACR,EAAeI,GACxC,OAAO+H,GAASlI,KAAK,gBAAiB,CAACD,QAAOI,aC6B1CmI,CAAavI,EAAOI,GACfhB,MAAK,SAAA+H,GAAG,OAAItD,EAdd,CACHpD,KAAM,+CAcD2G,OAAM,SAAAC,GAAG,OAAIxD,EAASwE,GAAiB,sEACzCb,SAAQ,kBAAM3D,EAASrD,EAAS,iB,oBCvB9BgI,GAAe,SAAC,GAS8B,IAR1BC,EAQyB,EARzBA,YACAC,EAOyB,EAPzBA,eACAC,EAMyB,EANzBA,UACA3I,EAKyB,EALzBA,MACAI,EAIyB,EAJzBA,SACAiB,EAGyB,EAHzBA,MACAuH,EAEyB,EAFzBA,wBACAC,EACyB,EADzBA,kBAE7B,OACI,qBAAKvH,UAAWyB,IAAEC,UAAlB,SACE,sBAAK1B,UAAWM,KAAEkH,kBAAlB,UACE,qBAAKxH,UAAWM,KAAEsB,YAAlB,SACE,oBAAI5B,UAAWM,KAAEmH,kBAAjB,uBAIF,8BACI,cAAC,EAAD,CAAgB9H,SAAUwH,EAAatG,MAAOnC,EAAOsD,YAAa,YAEtE,8BACI,cAAC,EAAD,CAAgBrC,SAAUyH,EAAgBvG,MAAO/B,EAAUK,KAAM,WAAY6C,YAAa,eAE9F,8BACI,cAAC,EAAD,CAAgBrC,SAAU2H,EAAyBzG,MAAO0G,EAAmBpI,KAAM,WAAY6C,YAAa,uBAEhH,8BACI,+BAAOjC,MAEX,8BACI,cAAC,EAAD,CAAakC,QAASoF,EAAtB,+BCxCHK,GAAwB,WACpC,IAAMC,EAAoBpC,aAA+C,SAAAC,GAAK,OAAIA,EAAMoC,gBAClFrF,EAAWC,cAFyB,EAGhBC,mBAAS,IAHO,mBAGnC/D,EAHmC,KAG5BgH,EAH4B,OAIVjD,mBAAS,IAJC,mBAInC3D,EAJmC,KAIzB6G,EAJyB,OAKQlD,mBAAS,IALjB,mBAKnC8E,EALmC,KAKhBM,EALgB,KAsB1C,OAAIF,EAAkBb,aACd,cAAC,IAAD,CAAU9B,GAAI,WAGrB,8BACC,cAAC,GAAD,CAAcmC,YArBI,SAACxG,GACpB+E,EAAS/E,EAAEC,cAAcC,QAoBgBuG,eAlBnB,SAACzG,GACvBgF,EAAYhF,EAAEC,cAAcC,QAiB6CyG,wBAf1C,SAAC3G,GAChCkH,EAAqBlH,EAAEC,cAAcC,QAe/BwG,UAbW,WAEhB9E,EADEzD,IAAayI,EACNR,GAAiB,wCAEjBC,GAAetI,EAAOI,KASJJ,MAAOA,EAC7BI,SAAUA,EAAUiB,MAAO4H,EAAkB5H,MAAOwH,kBAAmBA,OC3BlEO,GAAoB,SAAC,GAA4C,IAA3C3D,EAA0C,EAA1CA,SAA0C,4BAG5E,OAFmBoB,aAAmC,SAAAC,GAAK,OAAIA,EAAMuC,OAAO1I,cAGpE,cAAC,IAAD,CAAU2F,GAAG,gBAEdb,GCNK6D,GAAyB,SAAC,GAA4C,IAA3C7D,EAA0C,EAA1CA,SAA0C,4BAGjF,OAFkBoB,aAAmC,SAAAC,GAAK,OAAIA,EAAMuC,OAAOzI,WAGnE,cAAC,IAAD,CAAU0F,GAAG,WAEdb,G,oBCfO,OAA0B,sCCQ5B8D,GAAY,WACxB,IAAM1I,EAAgBgG,aAAkC,SAAAC,GAAK,OAAIA,EAAMuC,OAAOxI,iBAC9E,OACC,qBAAKS,UAAWyB,IAAEC,UAAlB,SACC,sBAAK1B,UAAWM,KAAE4H,eAAlB,UACC,qBAAKlI,UAAWM,KAAE6H,oBAAlB,SACC,qBAAKhG,IAAKiG,OAEX,qBAAKpI,UAAWM,KAAE+H,mBAAlB,SACC,oBAAIrI,UAAWM,KAAEgI,eAAjB,2BAID,qBAAKtI,UAAWM,KAAE+H,mBAAlB,SACC,mBAAGrI,UAAWM,KAAEiI,cAAhB,iEAA6EhJ,aCbrEiJ,GAAwB,SAAC,GAA4C,IAA3CrE,EAA0C,EAA1CA,SAA0C,4BAGhF,OAFmBoB,aAAmC,SAAAC,GAAK,OAAIA,EAAMuC,OAAO1I,cAGpE8E,EAED,cAAC,IAAD,CAAUa,GAAG,eCDRC,GAAO,CACnByB,UAAW,SACX+B,YAAa,6BACb7C,YAAa,WACbV,aAAc,YACdG,iBAAkB,UAClBqD,UAAW,eAGCC,GAAc,WAC1B,OACC,8BACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAOC,KAAM,IAAKC,QAAS,cAAC,IAAD,CAAU7D,GAAIC,GAAKyB,cAC9C,cAAC,IAAD,CAAOkC,KAAM3D,GAAKwD,YAAaI,QAC9B,cAAC,GAAD,UACC,cAAC,EAAD,QAGF,cAAC,IAAD,CAAOD,KAAM3D,GAAKyB,UAAWmC,QAAS,cAAC,GAAD,MACtC,cAAC,IAAD,CAAOD,KAAM3D,GAAKW,YAAaiD,QAAS,cAAC,GAAD,MACxC,cAAC,IAAD,CAAOD,KAAM3D,GAAKI,iBAAkBwD,QAAS,cAAC,GAAD,MAC7C,cAAC,IAAD,CAAOD,KAAM3D,GAAKyD,UAAWG,QAC5B,cAAC,GAAD,UACC,cAAC,GAAD,QAGF,cAAC,IAAD,CAAOD,KAAM3D,GAAKC,aAAc2D,QAC/B,cAAC,GAAD,UACC,cAAC,GAAD,QAGF,cAAC,IAAD,CAAOD,KAAM,IAAKC,QAAS,cAAC,EAAD,YCzClBC,GAAS,WACrB,OACC,sBAAKC,MAAO,CAACC,QAAS,OAAQC,eAAgB,UAA9C,UACC,qBAAKF,MAAO,CAACG,OAAQ,QAArB,SACC,cAAC,IAAD,CAASlE,GAAIC,GAAKyB,UAAlB,qBAED,qBAAKqC,MAAO,CAACG,OAAQ,QAArB,SACC,cAAC,IAAD,CAASlE,GAAIC,GAAKW,YAAlB,uBAED,qBAAKmD,MAAO,CAACG,OAAQ,QAArB,SACC,cAAC,IAAD,CAASlE,GAAIC,GAAKC,aAAlB,wBAED,qBAAK6D,MAAO,CAACG,OAAQ,QAArB,SACC,cAAC,IAAD,CAASlE,GAAIC,GAAKI,iBAAlB,gC,oBCXS8D,GAAO,WACnB,IAAMlK,EAASsG,aAAsC,SAAAC,GAAK,OAAIA,EAAM4D,IAAInK,UACxE,OACC,qBAAKe,UAAWM,KAAE+I,uBAAlB,SACa,YAAXpK,GACD,qBAAKe,UAAWM,KAAEgJ,kBAAlB,SACC,qBAAKtJ,UAAWM,KAAEiJ,wBCJTC,GAAM,WAClB,IAAMjH,EAAWC,cAcjB,OAbAiH,qBAAU,WACTjG,IAAc1F,MAAK,SAAC+H,GACnB,IAAM1C,EAAO,CACZS,QAAQ,EACRC,IAAKgC,EAAI1C,KAAKU,IACdnF,MAAOmH,EAAI1C,KAAKzE,MAChBoF,KAAM+B,EAAI1C,KAAKW,KACfC,OAAS8B,EAAI1C,KAAKY,OAAS8B,EAAI1C,KAAKY,OAAS,MAE9CxB,EAASyB,EAAYb,SAGpB,CAACZ,IAEH,sBAAKvC,UAAU,MAAf,UACC,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,Q,kBCrBG0J,GAAWC,aAAgB,CAChCP,I5BGyB,WAA+D,IAA9D5D,EAA6D,uDAArDxG,EAAW4K,EAA0C,uCACvF,OAAQA,EAAOzK,MACd,IAAK,cACJ,OAAO,2BACHqG,GACAoE,EAAOxK,SAEZ,QACC,OAAOoG,I4BVToC,aZGkC,WAAmE,IAAlEpC,EAAiE,uDAAzDxG,GAAY4K,EAA6C,uCACjG,OAAQA,EAAOzK,MACX,IAAK,0CACD,OAAO,2BAAIqG,GAAX,IAAkBsB,cAAc,IACpC,IAAK,kCACD,OAAO,2BAAItB,GAAX,IAAkBzF,MAAO6J,EAAO7J,QACpC,QACI,OAAOyF,IYTlBuC,O3BG4B,WAAsE,IAArEvC,EAAoE,uDAA5DxG,EAAW4K,EAAiD,uCACjG,OAAQA,EAAOzK,MACd,IAAK,gCACL,IAAK,6BACJ,OAAO,2BACHqG,GACAoE,EAAOxK,SAEZ,IAAK,wBACJ,OAAO,2BACHoG,GADJ,IAECjG,cAAeqK,EAAOxK,QAAQV,QAEhC,QACC,OAAO8G,I2BhBTL,MpBS2B,WAAoF,IAAnFK,EAAkF,uDAAxD7B,EAAciG,EAA0C,uCAC9G,OAAQA,EAAOzK,MACd,IAAI,8BAGJ,IAAK,uBACJ,OAAO,2BAAIqG,GAAUoE,EAAOzG,MAE7B,QACC,OAAOqC,MoBfGqE,GAAQC,aAAYJ,GAASK,aAAgBC,OAM1DC,OAAOJ,MAAQA,GCXfK,IAASC,OACR,cAAC,IAAD,UACC,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACC,cAAC,IAAMO,WAAP,UACC,cAAC,GAAD,UAIHC,SAASC,eAAe,SAGzB3M,M","file":"static/js/main.a6160c70.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__Cdd3W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgotBlock\":\"ForgotPass_forgotBlock__2UuLx\",\"forgotTitle\":\"ForgotPass_forgotTitle__IVP1s\",\"blockCenter\":\"ForgotPass_blockCenter__IiFd7\",\"forgotText\":\"ForgotPass_forgotText__308lu\",\"forgotInputBlock\":\"ForgotPass_forgotInputBlock__3KoZo\",\"forgotImageBlock\":\"ForgotPass_forgotImageBlock__3bveD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBlock\":\"Login_loginBlock__1SrgF\",\"loginTitle\":\"Login_loginTitle__2soKn\",\"blockCenter\":\"Login_blockCenter__jBKNA\",\"loginText\":\"Login_loginText__IGD5Y\",\"loginInputBlock\":\"Login_loginInputBlock__13O5S\",\"loginImageBlock\":\"Login_loginImageBlock__LKlh_\",\"blockCheck\":\"Login_blockCheck__2ZQ2n\",\"blockForgotPass\":\"Login_blockForgotPass__1CbT4\",\"loginInputsBlock\":\"Login_loginInputsBlock__l_pRo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recoveryBlock\":\"Recovery_recoveryBlock__1qUvc\",\"recoveryTitle\":\"Recovery_recoveryTitle__3X6eL\",\"recoveryUpperText\":\"Recovery_recoveryUpperText__2sWmA\",\"blockCenter\":\"Recovery_blockCenter__AdwNW\",\"recoveryLowerText\":\"Recovery_recoveryLowerText__3BaIr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkMailBlock\":\"CheckMail_checkMailBlock__2G4vF\",\"checkMailImageBlock\":\"CheckMail_checkMailImageBlock__13mDV\",\"checkMailTextBlock\":\"CheckMail_checkMailTextBlock__2ZOKu\",\"checkMailTitle\":\"CheckMail_checkMailTitle__1FwF7\",\"checkMailText\":\"CheckMail_checkMailText__uQ9pt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3HwVZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registrationBlock\":\"Registration_registrationBlock__KD9L9\",\"registrationTitle\":\"Registration_registrationTitle__ikvRV\",\"blockCenter\":\"Registration_blockCenter__1KTor\",\"registrationText\":\"Registration_registrationText__3Z7-T\",\"registrationInputBlock\":\"Registration_registrationInputBlock__3mTN0\",\"registrationImageBlock\":\"Registration_registrationImageBlock__FgI8D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nendovebKubscuponBlock\":\"Load_nendovebKubscuponBlock__1fF6D\",\"nendovebKubscupon\":\"Load_nendovebKubscupon__iZlhg\",\"kacekagenProtsem\":\"Load_kacekagenProtsem__5lEsZ\",\"loading\":\"Load_loading__3WMAF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__wL_k0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3gQJZ\",\"spanClassName\":\"SuperCheckbox_spanClassName__38bao\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\n\r\nexport const Error404 = () => {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\n\r\ntype AxiosForgotPasswordType = {\r\n\tsuccess: boolean\r\n}\r\n\r\nconst initial = axios.create(\r\n\t{\r\n\t\tbaseURL:'https://neko-back.herokuapp.com/2.0',\r\n\t}\r\n)\r\n\r\nexport const cardsForgotAPI = {\r\n\tforgotPassword(email: string) {\r\n\t\treturn initial.post<AxiosForgotPasswordType>('auth/forgot', {\r\n\t\t\temail,\r\n\t\t\tfrom: 'AleksMaifet',\r\n\t\t\tmessage: `\\n<div style=\\\"background-color: #f7f7f7; border-radius: 12px; font-size: 20px; text-align: center; padding: 15px\\\">\\nTo reset your password,click this link: \\n<div><a href='https://aleksmaifet.github.io/Cards/#/set-new-password/$token$'>Please Click</a></div>\\n</div>\\n`\r\n\t\t}, {})\r\n\t},\r\n\tsetNewPassword(password:string,resetPasswordToken:string|undefined) {\r\n\t\treturn initial.post('auth/set-new-password',{\r\n\t\t\tpassword,\r\n\t\t\tresetPasswordToken,\r\n\t\t},{})\r\n\t}\r\n}\r\n","export type IsLoadType = 'idle' | 'loading' | 'success';\r\n\r\nexport type initStateType = {\r\n\tisLoad:IsLoadType\r\n}\r\n\r\nconst initState:initStateType = {\r\n\tisLoad: 'idle',\r\n}\r\n\r\n\r\nexport const appReducer = (state = initState, action: AppHandlerType): initStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase \"APP/IS-LOAD\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.payload,\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport type AppHandlerType = ReturnType<typeof isLoadAC>\r\n\r\n\r\nexport const isLoadAC = (isLoad: IsLoadType) => {\r\n\treturn {\r\n\t\ttype: 'APP/IS-LOAD',\r\n\t\tpayload: {\r\n\t\t\tisLoad,\r\n\t\t}\r\n\t} as const\r\n}","import {cardsForgotAPI} from \"../ApiRequests/apiForgot\";\r\nimport {Dispatch} from \"redux\";\r\nimport {isLoadAC} from \"./AppReducer\";\r\n\r\nexport type initStateType = typeof initState\r\n\r\nexport const initState = {\r\n\tisRecovery: false,\r\n\tnewPass:false,\r\n\temailRecovery:'',\r\n}\r\n\r\n\r\nexport const forgotReducer = (state = initState, action: ForgotPasswordHandler): initStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase \"FORGOT/CHANGE-RECOVERY-STATUS\":\r\n\t\tcase \"FORGOT/CHANGE-NEW-PASSWORD\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.payload\r\n\t\t\t}\r\n\t\tcase \"FORGOT/EMAIL-RECOVERY\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\temailRecovery: action.payload.email\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n\r\nexport type ForgotPasswordHandler = ReturnType<typeof forgotPasswordAC> | ReturnType<typeof newPasswordAC> | ReturnType<typeof emailRecoveryAC>\r\n\r\nexport const forgotPasswordAC = (isRecovery:boolean) => {\r\n\treturn {\r\n\t\ttype:'FORGOT/CHANGE-RECOVERY-STATUS',\r\n\t\tpayload:{\r\n\t\t\tisRecovery\r\n\t\t},\r\n\t} as const\r\n}\r\n\r\nexport const emailRecoveryAC = (email:string) => {\r\n\treturn {\r\n\t\ttype:'FORGOT/EMAIL-RECOVERY',\r\n\t\tpayload:{\r\n\t\t\temail\r\n\t\t},\r\n\t} as const\r\n}\r\n\r\nexport const newPasswordAC = (newPass:boolean) => {\r\n\treturn {\r\n\t\ttype:'FORGOT/CHANGE-NEW-PASSWORD',\r\n\t\tpayload:{\r\n\t\t\tnewPass\r\n\t\t},\r\n\t} as const\r\n}\r\n\r\nexport const forgotPasswordTC = (email: string) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\tdispatch(isLoadAC('loading'))\r\n\t\ttry {\r\n\t\t\tconst {data: {success}} = await cardsForgotAPI.forgotPassword(email)\r\n\t\t\tdispatch(forgotPasswordAC(success))\r\n\t\t\tdispatch(emailRecoveryAC(email))\r\n\t\t} catch (err:any) {\r\n\t\t\tconst errorMassage = err.response ? err.response.data.error : 'Check internet connection!'\r\n\t\t\talert(errorMassage)\r\n\t\t} finally {\r\n\t\t\tdispatch(isLoadAC('success'))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const newPasswordTC = (newPass: string, tokenId: string | undefined) => {\r\n\treturn async (dispatch: Dispatch) => {\r\n\t\tdispatch(isLoadAC('loading'))\r\n\t\ttry {\r\n\t\t\tawait cardsForgotAPI.setNewPassword(newPass, tokenId)\r\n\t\t\tdispatch(newPasswordAC(true))\r\n\t\t} catch (err: any) {\r\n\t\t\tconst errorMassage = err.response ? err.response.data.error : err.messages + ' Check internet connection!'\r\n\t\t\talert(errorMassage)\r\n\t\t} finally {\r\n\t\t\tdispatch(isLoadAC('success'))\r\n\t\t}\r\n\t}\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n  onChangeText?: (value: string) => void\r\n  onEnter?: () => void\r\n  error?: string\r\n  spanClassName?: string\r\n  typeInput?: 'text' | 'password'\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,typeInput,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange\r\n        && onChange(e)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        onEnter\r\n        && e.key === 'Enter'\r\n        && onEnter()\r\n    }\r\n    const typeChange = typeInput === 'password'? 'password' : 'text'\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${ error ? s.errorInput : s.superInput} ${className}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={typeChange}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                {...restProps}\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","export default __webpack_public_path__ + \"static/media/Shape.109a1739.svg\";","import React, {FormEvent} from 'react'\r\nimport SuperInputText from \"../../superComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../superComponents/c2-SuperButton/SuperButton\";\r\nimport s from './ForgotPass.module.css'\r\nimport c from '../../../styleComponents/App.module.css'\r\nimport eye from '../../../images/Shape.svg'\r\nimport {typeInputType} from \"./ForgotPass\";\r\n\r\ntype BlockForgotType = {\r\n\tinputValue: string\r\n\tsetValue: (value: string) => void\r\n\tsubmitValueHandler: (e: FormEvent<HTMLFormElement>) => void\r\n\ttypeInput?: typeInputType\r\n\tchangeVisibility:() => void\r\n}\r\n\r\n\r\nexport const BlockForgot = ({...props}: BlockForgotType) => {\r\n\tconst {\r\n\t\tinputValue,\r\n\t\tsetValue,\r\n\t\tsubmitValueHandler,\r\n\t\ttypeInput,\r\n\t\tchangeVisibility,\r\n\t} = props\r\n\r\n\treturn (\r\n\t\t<div className={c.container}>\r\n\t\t\t<div className={s.forgotBlock}>\r\n\t\t\t\t<div className={s.blockCenter}>\r\n\t\t\t\t\t<h3 className={s.forgotTitle}>\r\n\t\t\t\t\t\tCreate new password\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<form onSubmit={submitValueHandler}>\r\n\t\t\t\t\t\t<div className={s.forgotInputBlock}>\r\n\t\t\t\t\t\t\t<SuperInputText placeholder={'Password'} typeInput={typeInput}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setValue(e.currentTarget.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={inputValue}/>\r\n\t\t\t\t\t\t\t<div onClick={changeVisibility} className={s.forgotImageBlock}>\r\n\t\t\t\t\t\t\t\t<img src={eye}/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={s.blockCenter}>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={s.blockCenter}>\r\n\t\t\t\t\t\t\t<p className={s.forgotText}>\r\n\t\t\t\t\t\t\t\tCreate new password and we will send you further instructions to email\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<SuperButton>Send Instructions</SuperButton>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, {FormEvent, useCallback, useState} from 'react'\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {newPasswordTC} from \"../../Reducers/ForgotReducer\";\r\nimport {BlockForgot} from \"./BlockForgot\";\r\n\r\nexport type useParamsType = {\r\n\ttokenId:string | undefined\r\n}\r\nexport type typeInputType = 'text' | 'password';\r\n\r\nexport const ForgotPass = () => {\r\n\tconst dispatch = useDispatch()\r\n\tconst [value,setValue] = useState<string>('')\r\n\tconst {tokenId}:useParamsType = useParams()\r\n\tconst [typeInput,setTypeInput] = useState<typeInputType>('password')\r\n\r\n\tconst submitForgotValueHandler = useCallback((e:FormEvent<HTMLFormElement>) => {\r\n\t\te.preventDefault()\r\n\t\tdispatch(newPasswordTC(value,tokenId))\r\n\t\tsetValue('')\r\n\t},[dispatch,value,tokenId])\r\n\r\n\tconst changeVisibility = () => {\r\n\t\ttypeInput === 'text' ? setTypeInput('password') : setTypeInput('text')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<BlockForgot changeVisibility={changeVisibility} typeInput={typeInput} submitValueHandler={submitForgotValueHandler} setValue={setValue} inputValue={value}/>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import axios, {AxiosResponse} from \"axios\";\r\ntype ResponseLoginType = {\r\n    avatar?: string;\r\n    created: Date\r\n    email: string\r\n    isAdmin: boolean\r\n    name: string\r\n    publicCardPacksCount: number\r\n    rememberMe: boolean\r\n    token: string\r\n    tokenDeathTime: number\r\n    updated: Date\r\n    verified: boolean\r\n    __v: number\r\n    _id: string\r\n}\r\ntype ResponseDeleteMeType = {\r\n    info: string;\r\n    error: string;\r\n}\r\nconst initial = axios.create(\r\n    {\r\n        baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n        withCredentials: true\r\n    }\r\n)\r\n\r\nexport const apiLogin = {\r\n    setLogin(email: string, password: string, rememberMe: boolean) {\r\n        return initial.post<ResponseLoginType, AxiosResponse<ResponseLoginType>>('auth/login', {      // Типизация...???\r\n            email: email,\r\n            password: password,\r\n            rememberMe: rememberMe\r\n        })\r\n\r\n\r\n    },\r\n    logout() {\r\n        return initial.delete<ResponseDeleteMeType>('auth/me')\r\n    },\r\n    me() {\r\n        return initial.post<ResponseLoginType>('auth/me')\r\n    },\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {apiLogin} from \"../ApiRequests/apiLogin\";\r\nimport {isLoadAC} from \"./AppReducer\";\r\n\r\ntype initialStateType = {\r\n\tisAuth: boolean\r\n\t_id: string | null;\r\n\temail: string | null;\r\n\tname: string | null;\r\n\tavatar?: string | null;\r\n\r\n}\r\nconst initialState = {\r\n\tisAuth: false,\r\n\t_id: null,\r\n\temail: null,\r\n\tname: null,\r\n\tavatar: null,\r\n}\r\ntype ActionsType = setUserDataType | setLogoutType\r\nexport const loginReducer = (state: initialStateType = initialState, action: ActionsType): initialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase'login-reducer/SET-USER-DATA': {\r\n\t\t\treturn {...state, ...action.data}\r\n\t\t}\r\n\t\tcase 'login-reducer/LOGOUT': {\r\n\t\t\treturn {...state, ...action.data}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const setUserData = (data: initialStateType) => {\r\n\treturn {\r\n\t\ttype: 'login-reducer/SET-USER-DATA',\r\n\t\tdata\r\n\t} as const\r\n}\r\ntype setUserDataType = ReturnType<typeof setUserData>\r\nconst setLogout = () => {\r\n\treturn {\r\n\t\ttype: 'login-reducer/LOGOUT',\r\n\t\tdata: {\r\n\t\t\tisAuth: false,\r\n\t\t\t_id: null,\r\n\t\t\temail: null,\r\n\t\t\tname: null,\r\n\t\t\tavatar: null,\r\n\t\t}\r\n\t} as const\r\n}\r\ntype setLogoutType = ReturnType<typeof setLogout>\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch) => {\r\n\tdispatch(isLoadAC('loading'))\r\n\tapiLogin.setLogin(email, password, rememberMe).then((res) => {\r\n\t\tconst data = {\r\n\t\t\tisAuth: true,\r\n\t\t\t_id: res.data._id,\r\n\t\t\temail: res.data.email,\r\n\t\t\tname: res.data.name,\r\n\t\t\tavatar: (res.data.avatar ? res.data.avatar : null),\r\n\t\t}\r\n\t\tdispatch(setUserData(data))\r\n\t}).catch((err) => console.log(err))\r\n\t\t.finally(() => dispatch(isLoadAC('success')))\r\n}\r\nexport const logoutTC = () => (dispatch: Dispatch) => {\r\n\tdispatch(isLoadAC('loading'))\r\n\tapiLogin.logout().then(() => {\r\n\t\t\tdispatch(setLogout())\r\n\t\t}\r\n\t).catch((err) => console.log(err))\r\n\t\t.finally(() => dispatch(isLoadAC('success')))\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n     onChange\r\n     && onChange(e)\r\n\r\n      onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../../RoutesBlock/RoutesBlock\";\r\nimport React from \"react\";\r\nimport SuperButton from \"../../superComponents/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../superComponents/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperInputText from \"../../superComponents/c1-SuperInputText/SuperInputText\";\r\nimport s from './Login.module.css'\r\nimport c from '../../../styleComponents/App.module.css'\r\n\r\n\r\ntype LoginPropsType = {\r\n\tonChangeEmail: (e: React.FormEvent<HTMLInputElement>) => void\r\n\tchangeChecked: () => void\r\n\tonChangePassword: (e: React.FormEvent<HTMLInputElement>) => void\r\n\tlogin: () => void\r\n\tpassword: string\r\n\temail: string\r\n\tchecked: boolean\r\n}\r\nexport const Login = (props: LoginPropsType) => {\r\n\r\n\treturn (\r\n\t\t<div className={c.container}>\r\n\t\t\t<div className={s.loginBlock}>\r\n\t\t\t\t<div className={s.blockCenter}>\r\n\t\t\t\t\t<h3 className={s.loginTitle}>\r\n\t\t\t\t\t\tSign in\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<SuperInputText placeholder={'Email'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.onChangeEmail}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.email}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.loginInputsBlock}>\r\n\t\t\t\t\t<SuperInputText placeholder={'Password'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={props.onChangePassword}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={props.password}/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className={s.blockCheck}>\r\n\t\t\t\t\tRemember me\r\n\t\t\t\t\t<SuperCheckbox type={\"checkbox\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t defaultChecked={props.checked}\r\n\t\t\t\t\t\t\t\t\t\t\t\t onClick={props.changeChecked}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.blockForgotPass}>\r\n\t\t\t\t\t<NavLink to={PATH.RECOVERYPAGE}>Forgot password</NavLink>\r\n\t\t\t\t</div>\r\n\t\t\t\t<SuperButton onClick={props.login}>Login</SuperButton>\r\n\t\t\t\t<div className={s.blockCenter}>\r\n\t\t\t\t\t<p className={s.loginText}>\r\n\t\t\t\t\t\tDon’t have an account?\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<NavLink to={PATH.REGISTRATIONPAGE}>Sign Up</NavLink>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>)\r\n}","import React, {useState} from 'react'\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {PATH} from \"../../RoutesBlock/RoutesBlock\";\r\nimport {loginTC} from \"../../Reducers/login-reducer\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {Login} from \"./Login\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\n\r\nexport const LoginContainer = () => {\r\n    const isAuth = useSelector<AppStoreType,boolean>(state => state.login.isAuth)\r\n    const dispatch = useDispatch()\r\n    const [checked, setChecked] = useState(false)\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const changeChecked =() => {\r\n        setChecked(!checked)\r\n    }\r\n    const onChangeEmail =(e: React.FormEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n    }\r\n    const onChangePassword =(e: React.FormEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value)\r\n    }\r\n    const login = () => {\r\n        dispatch(loginTC(email, password, checked))\r\n    }\r\n    if (isAuth) {\r\n        return <Navigate to={PATH.PROFILEPAGE}/>\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Login\r\n              onChangeEmail={onChangeEmail}\r\n              changeChecked={changeChecked}\r\n              onChangePassword={onChangePassword}\r\n              login={login}\r\n              password={password}\r\n              email={email}\r\n              checked={checked}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {logoutTC} from \"../../Reducers/login-reducer\";\r\n\r\nexport const Profile = () => {\r\n\tconst isAuth=useSelector((state:AppStoreType)=>state.login.isAuth)\r\n\tconst dispatch=useDispatch()\r\n\tconst logout = () => {\r\n\t\tdispatch(logoutTC())\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>ProfilePage</div>\r\n\t\t\t{isAuth&&<button onClick={logout}>logout</button>}\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, {FormEvent} from 'react'\r\nimport SuperInputText from \"../../superComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../superComponents/c2-SuperButton/SuperButton\";\r\nimport s from './Recovery.module.css'\r\nimport c from '../../../styleComponents/App.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../../RoutesBlock/RoutesBlock\";\r\n\r\n\r\ntype BlockForgotType = {\r\n\tinputValue: string\r\n\tsetValue: (value: string) => void\r\n\tsubmitValueHandler: (e: FormEvent<HTMLFormElement>) => void\r\n\ttypeInput?: 'text' | 'password'\r\n}\r\n\r\n\r\nexport const BlockRecovery = ({...props}: BlockForgotType) => {\r\n\tconst {\r\n\t\tinputValue,\r\n\t\tsetValue,\r\n\t\tsubmitValueHandler,\r\n\t\ttypeInput,\r\n\t} = props\r\n\r\n\treturn (\r\n\t\t<div className={c.container}>\r\n\t\t\t<div className={s.recoveryBlock}>\r\n\t\t\t\t<div className={s.blockCenter}>\r\n\t\t\t\t\t<h3 className={s.recoveryTitle}>\r\n\t\t\t\t\t\tForgot your password?\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<form onSubmit={submitValueHandler}>\r\n\t\t\t\t\t<SuperInputText placeholder={'Email'} typeInput={typeInput}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setValue(e.currentTarget.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={inputValue}/>\r\n\t\t\t\t\t<div className={s.blockCenter}>\r\n\t\t\t\t\t\t<p className={s.recoveryUpperText}>\r\n\t\t\t\t\t\t\tEnter your email address and we will send you further instructions\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<SuperButton>Send Instructions</SuperButton>\r\n\t\t\t\t</form>\r\n\t\t\t\t<div className={s.blockCenter}>\r\n\t\t\t\t\t<p className={s.recoveryLowerText}>\r\n\t\t\t\t\t\tDid you remember your password?\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<NavLink to={PATH.LOGINPAGE}>Try logging in</NavLink>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, {FormEvent, useCallback, useState} from 'react'\r\nimport {BlockRecovery} from \"./BlockRecovery\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {forgotPasswordTC} from \"../../Reducers/ForgotReducer\";\r\n\r\nexport const Recovery = () => {\r\n\tconst dispatch = useDispatch()\r\n\tconst [value,setValue] = useState<string>('')\r\n\tconst [typeInput,setTypeInput] = useState<'text' | 'password'>('text')\r\n\r\n\tconst submitForgotValueHandler = useCallback((e:FormEvent<HTMLFormElement>) => {\r\n\t\tdispatch(forgotPasswordTC(value))\r\n\t\te.preventDefault()\r\n\t\tsetValue('')\r\n\t},[dispatch,value])\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>\r\n\t\t\t\t<BlockRecovery typeInput={typeInput} submitValueHandler={submitForgotValueHandler} setValue={setValue} inputValue={value}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true,\r\n})\r\nexport const registerUser = (email: string, password: string) => {\r\n    return instance.post(\"auth/register\", {email, password})\r\n}","import {Dispatch} from \"redux\";\r\nimport {registerUser} from \"../ApiRequests/registApi\";\r\nimport {isLoadAC} from \"./AppReducer\";\r\n\r\nexport type initRegistStateType = typeof initState\r\n\r\nexport const initState = {\r\n    isRegistered: false,\r\n    error: \"\"\r\n}\r\ntype ActionsType = ReturnType<typeof setRegisteredSuccessfull> | ReturnType<typeof setNotRegistered>\r\n\r\nexport const registrationReducer = (state = initState , action: ActionsType): initRegistStateType => {\r\n    switch (action.type) {\r\n        case \"registration/SET-REGISTERED-SUCCESSFULL\":\r\n            return {...state, isRegistered: true}\r\n        case \"registration/SET-NOT-REGISTERED\":\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const setRegisteredSuccessfull = () => {\r\n    return {\r\n        type: \"registration/SET-REGISTERED-SUCCESSFULL\",\r\n    } as const\r\n}\r\nexport const setNotRegistered = (error: string) => {\r\n    return {\r\n        type: \"registration/SET-NOT-REGISTERED\",\r\n        error,\r\n    } as const\r\n}\r\nexport const registrationTC = (email: string, password: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(isLoadAC('loading'))\r\n        registerUser(email, password)\r\n            .then(res => dispatch(setRegisteredSuccessfull()))\r\n            .catch(err => dispatch(setNotRegistered(\"Email or password are invailid. Please, try registration again\")))\r\n          .finally(() => dispatch(isLoadAC('success')))\r\n    }\r\n}","import React, {ChangeEvent} from \"react\";\r\nimport SuperInputText from \"../../../superComponents/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../superComponents/c2-SuperButton/SuperButton\";\r\nimport s from './../Registration.module.css'\r\nimport c from '../../../../styleComponents/App.module.css'\r\n\r\ntype RegistrationPropsType = {\r\n    changeEmail: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changePassword: (e: ChangeEvent<HTMLInputElement>) => void\r\n    changeConfirmedPassword: (e: ChangeEvent<HTMLInputElement>) => void\r\n    fetchData: () => void\r\n    email: string\r\n    password: string\r\n    confirmedPassword: string\r\n    error: string\r\n}\r\nexport const Registration = ({\r\n                                 changeEmail,\r\n                                 changePassword,\r\n                                 fetchData,\r\n                                 email,\r\n                                 password,\r\n                                 error,\r\n                                 changeConfirmedPassword,\r\n                                 confirmedPassword\r\n                             }: RegistrationPropsType) => {\r\n    return (\r\n        <div className={c.container}>\r\n          <div className={s.registrationBlock}>\r\n            <div className={s.blockCenter}>\r\n              <h3 className={s.registrationTitle}>\r\n                Sign Up\r\n              </h3>\r\n            </div>\r\n            <div>\r\n                <SuperInputText onChange={changeEmail} value={email} placeholder={\"Login\"}/>\r\n            </div>\r\n            <div>\r\n                <SuperInputText onChange={changePassword} value={password} type={\"password\"} placeholder={\"Password\"}/>\r\n            </div>\r\n            <div>\r\n                <SuperInputText onChange={changeConfirmedPassword} value={confirmedPassword} type={\"password\"} placeholder={\"Confirm password\"}/>\r\n            </div>\r\n            <div>\r\n                <span>{error}</span>\r\n            </div>\r\n            <div>\r\n                <SuperButton onClick={fetchData}>Register!</SuperButton>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useState} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {initRegistStateType, registrationTC, setNotRegistered} from \"../../Reducers/RegistrationReducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {Registration} from \"./Registration/Registration\";\r\n\r\nexport const RegistrationContainer = () => {\r\n\tconst registrationState = useSelector<AppStoreType, initRegistStateType>(state => state.registration)\r\n\tconst dispatch = useDispatch()\r\n\tconst [email, setEmail] = useState(\"\")\r\n\tconst [password, setPassword] = useState(\"\")\r\n\tconst [confirmedPassword, setConfirmedPassword] = useState(\"\")\r\n\tconst changeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetEmail(e.currentTarget.value)\r\n\t}\r\n\tconst changePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetPassword(e.currentTarget.value)\r\n\t}\r\n\tconst changeConfirmedPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetConfirmedPassword(e.currentTarget.value)\r\n\t}\r\n\tconst fetchData = () => {\r\n\t\tif(password !== confirmedPassword){\r\n\t\t\tdispatch(setNotRegistered(\"Passowrd confirmation does not match\"))\r\n\t\t} else{\r\n\t\t\tdispatch(registrationTC(email, password))\r\n\t\t}\r\n\t}\r\n\tif (registrationState.isRegistered){\r\n\t\treturn <Navigate to={\"/login\"}/>\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Registration changeEmail={changeEmail} changePassword={changePassword} changeConfirmedPassword={changeConfirmedPassword}\r\n\t\t\t\t\t\t  fetchData={fetchData} email={email}\r\n\t\t\t\t\t\t  password={password} error={registrationState.error} confirmedPassword={confirmedPassword}/>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {AppStoreType} from \"../../store/store\";\r\n\r\ntype PrivateRouterType = {\r\n\tchildren: JSX.Element\r\n}\r\n\r\nexport const ForgotPrivetRoute = ({children, ...rest}: PrivateRouterType) => {\r\n\tconst isRecovery = useSelector<AppStoreType, boolean>(state => state.forgot.isRecovery)\r\n\r\n\tif (isRecovery) {\r\n\t\treturn <Navigate to='/check-mail'/>\r\n\t}\r\n\treturn children\r\n}","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {AppStoreType} from \"../../store/store\";\r\n\r\ntype PrivateRouterType = {\r\n\tchildren: JSX.Element\r\n}\r\n\r\nexport const NewPasswordPrivetRoute = ({children, ...rest}: PrivateRouterType) => {\r\n\tconst isNewPass = useSelector<AppStoreType, boolean>(state => state.forgot.newPass)\r\n\r\n\tif (isNewPass) {\r\n\t\treturn <Navigate to='/login'/>\r\n\t}\r\n\treturn children\r\n}","export default __webpack_public_path__ + \"static/media/Group 281.005fbbd1.svg\";","import React from \"react\";\r\nimport s from './CheckMail.module.css'\r\nimport c from '../../../styleComponents/App.module.css'\r\nimport checkMailImage from '../../../images/Group 281.svg'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../store/store\";\r\n\r\n\r\nexport const CheckMail = () => {\r\n\tconst emailRecovery = useSelector<AppStoreType, string>(state => state.forgot.emailRecovery)\r\n\treturn (\r\n\t\t<div className={c.container}>\r\n\t\t\t<div className={s.checkMailBlock}>\r\n\t\t\t\t<div className={s.checkMailImageBlock}>\r\n\t\t\t\t\t<img src={checkMailImage}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.checkMailTextBlock}>\r\n\t\t\t\t\t<h3 className={s.checkMailTitle}>\r\n\t\t\t\t\t\tCheck Email\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.checkMailTextBlock}>\r\n\t\t\t\t\t<p className={s.checkMailText} >{`We’ve sent an Email with instructions to ${emailRecovery}`}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {AppStoreType} from \"../../store/store\";\r\n\r\ntype PrivateRouterType = {\r\n\tchildren: JSX.Element\r\n}\r\n\r\nexport const CheckMailPrivetRoute  = ({children, ...rest}: PrivateRouterType) => {\r\n\tconst isRecovery = useSelector<AppStoreType, boolean>(state => state.forgot.isRecovery)\r\n\r\n\tif (isRecovery) {\r\n\t\treturn children\r\n\t}\r\n\treturn <Navigate to='/recovery'/>\r\n}","import React from 'react'\r\nimport {Navigate, Route, Routes} from \"react-router-dom\";\r\nimport {Error404} from \"../Pages/ErrorPage/Error404\";\r\nimport {ForgotPass} from \"../Pages/NewPassPage/ForgotPass\";\r\nimport {LoginContainer} from '../Pages/LoginPage/LoginContainer';\r\nimport {Profile} from \"../Pages/ProfilePage/Profile\";\r\nimport {Recovery} from \"../Pages/RecoveryPage/Recovery\";\r\nimport {RegistrationContainer} from \"../Pages/RegistPage/RegistContainer\";\r\nimport {ForgotPrivetRoute} from \"./PrivetRoutes/ForgotPrivetRoute\";\r\nimport {NewPasswordPrivetRoute} from \"./PrivetRoutes/NewPasswordPrivetRoute\";\r\nimport {CheckMail} from \"../Pages/CheckMailPage/CheckMail\";\r\nimport {CheckMailPrivetRoute} from \"./PrivetRoutes/CheckMailPrivetRoute\";\r\n\r\n\r\nexport const PATH = {\r\n\tLOGINPAGE: '/login',\r\n\tNEWPASSPAGE: '/set-new-password/:tokenId',\r\n\tPROFILEPAGE: '/profile',\r\n\tRECOVERYPAGE: '/recovery',\r\n\tREGISTRATIONPAGE: '/regist',\r\n\tCHECKMAIL: '/check-mail'\r\n}\r\n\r\nexport const RoutesBlock = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Routes>\r\n\t\t\t\t<Route path={'/'} element={<Navigate to={PATH.LOGINPAGE}/>}/>\r\n\t\t\t\t<Route path={PATH.NEWPASSPAGE} element={\r\n\t\t\t\t\t<NewPasswordPrivetRoute>\r\n\t\t\t\t\t\t<ForgotPass/>\r\n\t\t\t\t\t</NewPasswordPrivetRoute>\r\n\t\t\t\t}/>\r\n\t\t\t\t<Route path={PATH.LOGINPAGE} element={<LoginContainer/>}/>\r\n\t\t\t\t<Route path={PATH.PROFILEPAGE} element={<Profile/>}/>\r\n\t\t\t\t<Route path={PATH.REGISTRATIONPAGE} element={<RegistrationContainer/>}/>\r\n\t\t\t\t<Route path={PATH.CHECKMAIL} element={\r\n\t\t\t\t\t<CheckMailPrivetRoute>\r\n\t\t\t\t\t\t<CheckMail/>\r\n\t\t\t\t\t</CheckMailPrivetRoute>\r\n\t\t\t\t}/>\r\n\t\t\t\t<Route path={PATH.RECOVERYPAGE} element={\r\n\t\t\t\t\t<ForgotPrivetRoute>\r\n\t\t\t\t\t\t<Recovery/>\r\n\t\t\t\t\t</ForgotPrivetRoute>\r\n\t\t\t\t}/>\r\n\t\t\t\t<Route path={'*'} element={<Error404/>}/>\r\n\t\t\t</Routes>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../RoutesBlock/RoutesBlock\";\r\n\r\n\r\nexport const Header = () => {\r\n\treturn (\r\n\t\t<div style={{display: 'flex', justifyContent: 'center'}}>\r\n\t\t\t<div style={{margin: '20px'}}>\r\n\t\t\t\t<NavLink to={PATH.LOGINPAGE}>login</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div style={{margin: '20px'}}>\r\n\t\t\t\t<NavLink to={PATH.PROFILEPAGE}>profile</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div style={{margin: '20px'}}>\r\n\t\t\t\t<NavLink to={PATH.RECOVERYPAGE}>revovery</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<div style={{margin: '20px'}}>\r\n\t\t\t\t<NavLink to={PATH.REGISTRATIONPAGE}>registration</NavLink>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from \"react\";\r\nimport s from \"././Load.module.css\"\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../store/store\";\r\nimport {IsLoadType} from \"../../Reducers/AppReducer\";\r\n\r\n\r\nexport const Load = () => {\r\n\tconst isLoad = useSelector<AppStoreType, IsLoadType>(state => state.app.isLoad)\r\n\treturn (\r\n\t\t<div className={s.nendovebKubscuponBlock}>\r\n\t\t\t{isLoad === 'loading' &&\r\n\t\t\t<div className={s.nendovebKubscupon}>\r\n\t\t\t\t<div className={s.kacekagenProtsem}>\r\n\t\t\t\t</div>\r\n\t\t\t</div>}\r\n\t\t</div>\r\n\t)\r\n}","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {Header} from \"./components/Header/Header\";\r\nimport {RoutesBlock} from \"./components/RoutesBlock/RoutesBlock\";\r\nimport {Load} from \"./components/Pages/LoadPage/Load\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {apiLogin} from \"./components/ApiRequests/apiLogin\";\r\nimport {setUserData} from './components/Reducers/login-reducer';\r\n\r\nexport const App = () => {\r\n\tconst dispatch = useDispatch()\r\n\tuseEffect(() => {\r\n\t\tapiLogin.me().then((res) => {\r\n\t\t\tconst data = {\r\n\t\t\t\tisAuth: true,\r\n\t\t\t\t_id: res.data._id,\r\n\t\t\t\temail: res.data.email,\r\n\t\t\t\tname: res.data.name,\r\n\t\t\t\tavatar: (res.data.avatar ? res.data.avatar : null),\r\n\t\t\t}\r\n\t\t\tdispatch(setUserData(data))\r\n\r\n\t\t})\r\n\t}, [dispatch])\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<Header/>\r\n\t\t\t<Load/>\r\n\t\t\t<RoutesBlock/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {registrationReducer} from \"../Reducers/RegistrationReducer\";\r\nimport {forgotReducer} from \"../Reducers/ForgotReducer\";\r\nimport {appReducer} from \"../Reducers/AppReducer\";\r\nimport {loginReducer} from \"../Reducers/login-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n\tapp: appReducer,\r\n\tregistration: registrationReducer,\r\n\tforgot: forgotReducer,\r\n\tlogin:loginReducer,\r\n})\r\n\r\nexport const store = createStore(reducers,applyMiddleware(thunk))\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n//@ts-ignore\r\n\r\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {App} from \"./App\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./components/store/store\";\n\nReactDOM.render(\n\t<HashRouter>\n\t\t<Provider store={store}>\n\t\t\t<React.StrictMode>\n\t\t\t\t<App/>\n\t\t\t</React.StrictMode>\n\t\t</Provider>\n\t</HashRouter>,\n\tdocument.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}